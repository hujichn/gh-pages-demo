<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ji Hu&#39;s Blog</title>
  <subtitle>拖延症患者- -</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hujichn.github.io/"/>
  <updated>2017-03-14T07:13:35.057Z</updated>
  <id>http://hujichn.github.io/</id>
  
  <author>
    <name>Ji Hu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>熵值法确定权重的步骤及适用范围</title>
    <link href="http://hujichn.github.io/2016/08/10/%E7%86%B5%E5%80%BC%E6%B3%95%E7%A1%AE%E5%AE%9A%E6%9D%83%E9%87%8D%E7%9A%84%E6%AD%A5%E9%AA%A4%E5%8F%8A%E9%80%82%E7%94%A8%E8%8C%83%E5%9B%B4/"/>
    <id>http://hujichn.github.io/2016/08/10/熵值法确定权重的步骤及适用范围/</id>
    <published>2016-08-10T14:37:40.000Z</published>
    <updated>2017-03-14T07:13:35.057Z</updated>
    
    <content type="html"><![CDATA[<p>日常工作中经常需要确定各个指标的权重，利用熵值法确定权重属于客观赋权法，从数据出发，避免过强的主观性，但是也同时带来了一些问题。在某个论坛的帖子中，作者提出了这样的一个问题：“<a href="http://cos.name/cn/topic/158566/#post-413325" target="_blank" rel="external">熵值法用于确定权重是否合适？什么场合下熵值法是不适用的？</a>”</p>
<p>下面我们就以作者提出的例子利用熵值法进行权重的求解（原贴的求解感觉存在问题），一方面可以学习一下熵值法确定权重的步骤，一方面也体会下熵值法的优缺点。</p>
<a id="more"></a>
<p>author: <a href="https://hujichn.github.io/">@Huji</a></p>
<h2 id="熵值法的原理"><a href="#熵值法的原理" class="headerlink" title="熵值法的原理"></a>熵值法的原理</h2><h3 id="什么是信息熵"><a href="#什么是信息熵" class="headerlink" title="什么是信息熵"></a>什么是信息熵</h3><p><code>熵</code>是热力学的一个物理概念，是体系混乱度（或无序度）的量度。熵越大说明系统越混乱，携带的信息越少，熵越小说明系统越有序，携带的信息越多。</p>
<p><code>信息熵</code>则借鉴了热力学中熵的概念 (注意：信息熵的符号与热力学熵应该是相反的<a href="http://baike.baidu.com/link?url=obJfFcvlpippsjTLji4tvqNCx5TQbkq1mjQnLPfpPrfAKtLNCHWp3XL9qRg0qZWL" target="_blank" rel="external">^baike</a>)，用于描述平均而言事件信息量大小。所以数学上，信息熵其实是<strong>事件所包含的信息量的期望</strong><a href="https://www.zhihu.com/question/22178202/answer/49929786" target="_blank" rel="external">^entropy</a>。</p>
<blockquote>
<p>在概率论和统计学中，数学期望(mean)（或均值，亦简称期望）是试验中每次可能结果的概率乘以其结果的总和。</p>
</blockquote>
<p>根据上面期望的定义，我们可以设想信息熵的公式大概是这样的一个格式</p>
<p>$信息熵=\sum  每种可能事件的概率 * 每种可能事件包含的信息量$</p>
<hr>
<p>例如预测小明的考试成绩，假如只有4道大题，每道只能得0分或者满分，那么小明成绩可能的事件共有5种：0，25，50，75，100</p>
<p>我们可以假设每种可能的事件发生的概率如下：</p>
<table>
<thead>
<tr>
<th>成绩</th>
<th>0分</th>
<th>25分</th>
<th>50分</th>
<th>75分</th>
<th>100分</th>
</tr>
</thead>
<tbody>
<tr>
<td>概率</td>
<td>1/8</td>
<td>1/8</td>
<td>1/4</td>
<td>1/4</td>
<td>1/4</td>
</tr>
</tbody>
</table>
<p>这样一来上面的<strong>每种可能的事件的概率</strong>我们就知道了，那么剩下的就是计算<strong>每种可能事件包含的信息量</strong>。</p>
<hr>
<p><strong>那么每种可能事件包含的信息量跟什么有关呢？</strong></p>
<p>答案是跟这一事件的<strong>不确定性</strong>有关，即与事件发生的<strong>概率</strong>有关，概率越大，信息量越小。试想，如果上面的概率修改一下，令小明得100分的概率是1，那么你预测小明会考100分这句话就没有信息量了，因为不管怎么样他肯定都会是100分。</p>
<p><strong>因此每种可能事件包含的信息量的计算采用不确定性函数$f$</strong>:</p>
<p>$f = log(1/P) = -log P$</p>
<p>采用这个函数，一方面保证了信息量是概率P的<strong>单调递降函数</strong>；另一方面保证了两个独立事件所产生的不确定性应等于各自不确定性之和，即<strong>可加性</strong>。</p>
<hr>
<p>综上，带入到我们一开始假设的公式中，可以得到信息熵的数学表达式如下：</p>
<p>$H(U) = -\sum_{i=1}^{n} P_i logP_i$</p>
<p>这里$H$是熵，$U$可以理解为所有可能事件的集合，有n种取值：$U_1,…,U_i,…,U_n$，对应概率为：$P_1,…,P_i,…,P_n$，对数的底一般取2。</p>
<h3 id="熵值法"><a href="#熵值法" class="headerlink" title="熵值法"></a>熵值法</h3><p>根据信息熵的定义，对于某项指标，我们可以<strong>用熵值来判断某个指标的离散程度</strong>，其熵值越小，指标的离散程度越大，该指标对综合评价的影响(即<strong>权重</strong>)越大。如果某项指标的值全部相等，那么该指标在综合评价中不起作用。</p>
<h2 id="熵值法的计算步骤"><a href="#熵值法的计算步骤" class="headerlink" title="熵值法的计算步骤"></a>熵值法的计算步骤</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>作者提出的是这样一个问题</p>
<blockquote>
<p>题目：这群学生中“最聪明/最优秀”的学生是谁？<br>| 学生     | 数学   |  体育  |<br> | ——– | —–  | —–  |<br>|学生5| 100 |90|<br>|学生3| 97  |89|<br>|学生13 |88 |98|<br>|学生7  |77 |100|<br>|学生2  |80 |96|<br>|学生12 |98 |76|<br>|学生9  |99 |56|<br>|学生14 |88 |56|<br>|学生6  |90 |43|<br>|学生11 |89 |32|<br>|学生8  |88 |32|<br>|学生4  |90 |24|<br>|学生15 |88 |21|<br>|学生16 |99 |1|<br>|学生1  |89 |11|<br>|学生10 |89 |2|</p>
</blockquote>
<h3 id="计算步骤"><a href="#计算步骤" class="headerlink" title="计算步骤"></a>计算步骤</h3><p><strong>注意：相关xlsx文件可以在此处【<a href="http://pan.baidu.com/s/1geCN3Yr" target="_blank" rel="external">下载</a>】</strong></p>
<ol>
<li><strong>确定指标体系</strong><br>首先需要确定评价的指标体系，例如下图是网站经营评价的两级指标体系。<br><img src="http://img.ph.126.net/gFHAFp4Wnb6wNGhERZ0VmQ==/3107202267925744949.jpg" alt="indicator"><br>在我们的例子中，评价指标只有两个：数学和体育的成绩。</li>
<li><strong>清洗指标极值</strong><br>即剔除各指标中极大或者极小的值，一般用比较合理的上下线替换这些极值，目的是减少极值数据对该指标的熵的影响。<br>原则：剔除占样本总数不到1-2%但指标值贡献率超过20-30%以上的极值样本。<br>我们这里样本本来也不多，也没有贡献率特别大的，所以没有做处理。</li>
<li><p><strong>归一化指标处理</strong><br>将各个指标同度量化，即将指标的实际值转化为不受量纲影响的指标评价值。常用的方法有：</p>
<p><strong>临界值法</strong>：<br>如果原始的第$i$个人的第$j$个指标是$x<em>{ij}$，那么归一化后是$x</em>{ij}’$。</p>
<p>$x<em>{ij}’ = \frac{x</em>{ij}-\min x_j}{\max x_j - \min x<em>j}$,<br>$x</em>{ij}’ = \frac{\max x<em>j-x</em>{ij}}{\max x_j - \min x_j}$</p>
<p>若指标是正向的选第一个公式；<br>若指标是负向的选第二个公式。</p>
<p>$\min x_j$是第$j$个指标的最小值，类似地，$\max x_j$是第$j$个指标的最大值。</p>
<p><strong>Z-score法</strong>：<br>$x<em>{ij}’ = \frac{x</em>{ij}-\bar{x_j}}{S}$</p>
<p>这里我们采用第一种临界值法，得到结果如下图<br><img src="http://static.zybuluo.com/huji/ckgn77gotujfyeoh2ehg1f1h/image_1appsk18lua6qj3c2l7ube45g.png" alt="image_1appsk18lua6qj3c2l7ube45g.png-29.3kB"></p>
</li>
<li><p><strong>计算指标熵和权</strong></p>
</li>
</ol>
<ul>
<li><p>计算指标熵要先计算第$i$个人的第$j$个指标值的比重<br>$y<em>{ij} = \frac{x</em>{ij}’}{\sum<em>{i=1}^m {x</em>{ij}’}}$</p>
<ul>
<li>计算第j项指标的信息熵的公式为<br>$e<em>j = -K\sum</em>{i=1}^m y<em>{ij} \ln y</em>{ij}$<br>(式中$K$为常数，$K=\frac{1}{\ln m}$，我觉得乘以这个主要是为了使得$e_j$小于等于1，这样后面求得的权重才是正数)</li>
</ul>
</li>
<li><p>某项指标的信息效用价值取决于该指标的信息熵$e_j$与1之间的差值，它的值直接影响权重的大小，信息效用值越大，对评价的重要性就越大，权重也就越大。<br>$d_j = 1 - e_j$</p>
<ul>
<li>第$j$项指标的权重为$w_j = \frac{d_j}{\sum_j d_j}$</li>
</ul>
<p>结果如下</p>
<p><img src="http://static.zybuluo.com/huji/a8o0baevoeyoakutonzwuh39/image_1apq8ve031cpb33p18q88mc1q4jt.png" alt="image_1apq8ve031cpb33p18q88mc1q4jt.png-62kB"></p>
</li>
</ul>
<ol>
<li><strong>指标加权计算得分</strong></li>
</ol>
<p>最后一步就是利用加权求和公式计算样本的评价值了<br>$U = \sum<em>j 100* y</em>{ij}w_j$</p>
<p>$U$为综合评价值，$w_j$为第j个指标的权重。</p>
<p>计算出的总分从高到低排序如下图所示：</p>
<p><img src="http://static.zybuluo.com/huji/lgdqsk3nh1g413fssf82mote/image_1apqaaqgo1gefia1ta01td7m031a.png" alt="image_1apqaaqgo1gefia1ta01td7m031a.png-19kB"></p>
<h2 id="熵值法的优缺点及适用范围"><a href="#熵值法的优缺点及适用范围" class="headerlink" title="熵值法的优缺点及适用范围"></a>熵值法的优缺点及适用范围</h2><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul>
<li>熵值法能深刻反映出指标的区分能力，进而确定权重</li>
<li>是一种客观赋权法，有理论依据，相对主观赋权具有较高的可信度和精确度</li>
<li>算法简单，实践起来比较方便，不需要借助其他分析软件</li>
</ul>
<h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ul>
<li>智能程度不够高。和多元回归和主成分等统计方法不同，它不能考虑指标与指标之间横向的影响（如：相关性）</li>
<li>若无业务经验的指导，权重可能失真</li>
<li>对样本的依赖性比较大，随着建模样本变化，权重会有一定的波动</li>
</ul>
<h3 id="适用范围"><a href="#适用范围" class="headerlink" title="适用范围"></a>适用范围</h3><p>结合上面的实例，我们看到：体育成绩离散程度更大，导致其最后权重也更大，但是从通常评判的角度看，聪明程度往往与数学成绩关系更为密切。这就说明单单使用熵值法权重失真是经常发生的，要结合一定专家打分法才能发挥熵值法的优势，像<strong>确定指标体系</strong>中的示意图那样，构建两级评价体系，上层可能需要结合专家经验来构建，而<strong>底层的指标分的比较细，权重比较难确定，这种情况下采用熵值法比较合适</strong>。</p>
<p>另外，确定权重前需要确定指标对目标得分的影响方向，对非线性的指标要进行预处理或者剔除。还要注意处理好极值。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;日常工作中经常需要确定各个指标的权重，利用熵值法确定权重属于客观赋权法，从数据出发，避免过强的主观性，但是也同时带来了一些问题。在某个论坛的帖子中，作者提出了这样的一个问题：“&lt;a href=&quot;http://cos.name/cn/topic/158566/#post-413325&quot;&gt;熵值法用于确定权重是否合适？什么场合下熵值法是不适用的？&lt;/a&gt;”&lt;/p&gt;
&lt;p&gt;下面我们就以作者提出的例子利用熵值法进行权重的求解（原贴的求解感觉存在问题），一方面可以学习一下熵值法确定权重的步骤，一方面也体会下熵值法的优缺点。&lt;/p&gt;
    
    </summary>
    
      <category term="research" scheme="http://hujichn.github.io/categories/research/"/>
    
    
      <category term="entropy" scheme="http://hujichn.github.io/tags/entropy/"/>
    
      <category term="weight" scheme="http://hujichn.github.io/tags/weight/"/>
    
  </entry>
  
  <entry>
    <title>什么是P、NP、NPC、NP-Hard问题</title>
    <link href="http://hujichn.github.io/2016/07/14/%E4%BB%80%E4%B9%88%E6%98%AFP%E3%80%81NP%E3%80%81NPC%E3%80%81NP-Hard%E9%97%AE%E9%A2%98/"/>
    <id>http://hujichn.github.io/2016/07/14/什么是P、NP、NPC、NP-Hard问题/</id>
    <published>2016-07-14T12:18:40.000Z</published>
    <updated>2017-03-14T07:13:35.032Z</updated>
    
    <content type="html"><![CDATA[<p>优化问题在磕盐的时候经常会遇到，其中经常涉及到某某问题是NP的之类的论断，因此花了一点时间整理了一下NP问题的相关知识，在研究过程中看到一篇很好的文章，因此下面的整理主要基于这篇文章《<a href="http://www.matrix67.com/blog/archives/105" target="_blank" rel="external">什么是P问题、NP问题和NPC问题</a>》，有兴趣的同学可以仔细阅读原文，时间紧张的话可以直接看下面我整理的内容。</p>
<a id="more"></a>
<p>author: <a href="http://hujichn.github.io">@Huji</a></p>
<h2 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h2><h3 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h3><p>表明问题规模扩大后，程序需要的时间长度增长得有多快。程序的时间复杂度一般可以分为两种级别：</p>
<pre><code>- 多项式级的复杂度，如O(1)，O(log(n))、O（n^a）等，

- 非多项式级的，如O(a^n)、O(n!)等。后者的复杂度计算机往往不能承受。
</code></pre><h3 id="约化-Reducibility"><a href="#约化-Reducibility" class="headerlink" title="约化(Reducibility)"></a>约化(Reducibility)</h3><p>简单的说，一个问题A可以约化为问题B的含义是，可以用问题B的解法解决问题A。（个人感觉也就是说，问题A是B的一种特殊情况。）标准化的定义是，如果能找到一个变化法则，对任意一个A程序的输入，都能按照这个法则变换成B程序的输入，使两程序的输出相同，那么我们说，问题A可以约化为问题B。</p>
<p>例如求解一元一次方程这个问题可以约化为求解一元二次方程，即可以令对应项系数不变，二次项的系数为0，将A的问题的输入参数带入到B问题的求解程序去求解。</p>
<p>另外，约化还具有传递性，A可以化约为B，B可以约化为C，那么A也可以约化为C。</p>
<hr>
<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><blockquote>
<ul>
<li><strong>P Problem</strong>: 对于任意的输入规模n，问题都可以在n的多项式时间内得到解决；</li>
<li><strong>NP(Non-deterministic Polynomial) Problem</strong>: 可以在多项式的时间里验证一个解的问题；</li>
<li><strong>NPC(Non-deterministic Polynomial Complete) Problem</strong>: 满足两个条件 (1)是一个NP问题 (2)所有的NP问题都可以约化到它</li>
<li><strong>NP-Hard Problem</strong>: 满足NPC问题的第二条，但不一定要满足第一条</li>
</ul>
</blockquote>
<hr>
<h2 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h2><h3 id="P-Problem"><a href="#P-Problem" class="headerlink" title="P Problem"></a>P Problem</h3><p>如果一个问题可以找到一个能在多项式的时间里解决它的算法，那么这个问题就属于P问题，即算法的时间复杂度是多项式级的。比如n个数中间找到最大值，或者n个数排序之类的。</p>
<h3 id="NP-Problem"><a href="#NP-Problem" class="headerlink" title="NP Problem"></a>NP Problem</h3><p>NP问题的另一个定义是可以在多项式的时间里猜到一个解的问题，例如求问图中起点到终点是否有一条小于100个单位长度的路线，随便选一条，如果算出来路径小于100，那么就猜到了一个解，也就是说如果你运气足够好的话就可以在多项式时间内解决这个问题。当然猜的前提是问题存在解。</p>
<p>再比如Hamilton问题，给定一幅图，是否能找到一条经过每个顶点一次且恰好一次最后又走回来的路，每条路都可以在多项式时间内判断这条路是否恰好经过了每个顶点，所以也是NP问题。</p>
<p>很显然，所有的P类问题都是NP问题，能在多项式时间内解决，必然能多项式地验证一个解。（NP是否等于P这个问题貌似还没有定论？）</p>
<h2 id="NPC-Problem："><a href="#NPC-Problem：" class="headerlink" title="NPC Problem："></a>NPC Problem：</h2><p>证明一个问题是NPC问题的步骤，先证明其为NP问题，再证明其中一个已知的NPC问题能够约化到它。（由约化的传递性，就可以满足定义中的第二条，第一个NPC问题是逻辑电路问题，即给定一个逻辑电路，问是否存在一种输入使输出为True，它显然属于NP问题，并且可以证明所有NP问题都可以约化到它）。</p>
<p>NPC问题目前没有多项式的有效算法，只能用指数级甚至阶乘级复杂度的搜索。</p>
<hr>
<p>还有一份英文资料也不错，先mark一下，<a href="http://stackoverflow.com/questions/1857244/what-are-the-differences-between-np-np-complete-and-np-hard" target="_blank" rel="external">What are the differences between NP, NP-Complete and NP-Hard?</a>，希望这篇内容对弄懂现在研究的问题有帮助~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;优化问题在磕盐的时候经常会遇到，其中经常涉及到某某问题是NP的之类的论断，因此花了一点时间整理了一下NP问题的相关知识，在研究过程中看到一篇很好的文章，因此下面的整理主要基于这篇文章《&lt;a href=&quot;http://www.matrix67.com/blog/archives/105&quot;&gt;什么是P问题、NP问题和NPC问题&lt;/a&gt;》，有兴趣的同学可以仔细阅读原文，时间紧张的话可以直接看下面我整理的内容。&lt;/p&gt;
    
    </summary>
    
      <category term="research" scheme="http://hujichn.github.io/categories/research/"/>
    
    
      <category term="NP" scheme="http://hujichn.github.io/tags/NP/"/>
    
      <category term="NPC" scheme="http://hujichn.github.io/tags/NPC/"/>
    
      <category term="NP-Hard" scheme="http://hujichn.github.io/tags/NP-Hard/"/>
    
  </entry>
  
  <entry>
    <title>Mobility Modeling and Prediction in Bike-Sharing Systems</title>
    <link href="http://hujichn.github.io/2016/07/07/Mobility%20Modeling%20and%20Prediction%20in%20Bike-Sharing%20Systems/"/>
    <id>http://hujichn.github.io/2016/07/07/Mobility Modeling and Prediction in Bike-Sharing Systems/</id>
    <published>2016-07-07T14:45:05.000Z</published>
    <updated>2017-03-14T07:13:35.008Z</updated>
    
    <content type="html"><![CDATA[<p>This is the vedio of our MobiSys 2016 paper “Mobility Modeling and Prediction in Bike-Sharing Systems”.</p>
<a id="more"></a>
<p>author: <a href="https://hujichn.github.io/">@Huji</a></p>
<p>The primary problem in bike-sharing systems is the uneven distribution of bicycles. To rebalance bikes, one key point is to firstly analyze and predict the usage demand. In this work, we established a spatio-temperal mobility model of bikes, and presented a novel traffic prediction mechanism. More details can be found in our MobiSys 2016 paper “<a href="https://athena.smu.edu.sg/mobisys/backend/mobisys/assets/paper_list/pdf_version/paper_13.pdf" target="_blank" rel="external">Mobility Modeling and Prediction in Bike-Sharing Systems</a>“. Thanks for watching!</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/hVb_SfbtWAU" frameborder="0" allowfullscreen></iframe>


]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the vedio of our MobiSys 2016 paper “Mobility Modeling and Prediction in Bike-Sharing Systems”.&lt;/p&gt;
    
    </summary>
    
      <category term="research" scheme="http://hujichn.github.io/categories/research/"/>
    
    
      <category term="bike" scheme="http://hujichn.github.io/tags/bike/"/>
    
      <category term="MobiSys" scheme="http://hujichn.github.io/tags/MobiSys/"/>
    
      <category term="mobility modeling" scheme="http://hujichn.github.io/tags/mobility-modeling/"/>
    
  </entry>
  
  <entry>
    <title>利用Mapbox和OSRM进行轨迹数据可视化教程</title>
    <link href="http://hujichn.github.io/2016/06/07/%E5%88%A9%E7%94%A8Mapbox%E5%92%8COSRM%E8%BF%9B%E8%A1%8C%E8%BD%A8%E8%BF%B9%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E6%95%99%E7%A8%8B/"/>
    <id>http://hujichn.github.io/2016/06/07/利用Mapbox和OSRM进行轨迹数据可视化教程/</id>
    <published>2016-06-07T06:53:02.000Z</published>
    <updated>2017-03-14T07:13:35.051Z</updated>
    
    <content type="html"><![CDATA[<p>在做与交通有关的项目时，往往要做一些轨迹数据的可视化，这里介绍了利用Mapbox平台加OSRM进行轨迹数据可视化的方法。首先需要利用OSRM生成轨迹数据，然后把轨迹数据或者说是路径存储至mysql数据库，最后提取相应数据传入Mapbox，完成可视化的工作。</p>
<a id="more"></a>
<p>author: <a href="https://hujichn.github.io/">@Huji</a></p>
<p><em>版权归作者所有，任何形式转载请联系作者。</em></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在做自行车调度方面的项目，希望能够呈现现有的调度轨迹，用可视化的方法让我们能够对现有的调度有一个直观的感受。选择<code>Mapbox</code>这一平台主要是看到了一家叫做urbica的可视化公司做的一个<a href="http://urbica.co/citibike/" target="_blank" rel="external">自行车trip的可视化系统</a>，这个系统的实现参考了一篇国外的硕士论文Rebalancing Citi Bike——A geospatial analysis of bike share redistribution in New York City，论文内容倒是比较简单，关键还是在实现，下面先放两张图仰慕一下效果。</p>
<p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/mapbox/1.gif" alt="mode 1"></p>
<p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/mapbox/2.gif" alt="mode 2"></p>
<p>其实现主要利用了<code>Mapbox</code>和<code>OSRM</code>，P.S. 另外还采用了<a href="http://d3js.org/" target="_blank" rel="external">D3.js</a> 来绘制一些滑动条啊、图表啊之类的，这个暂时还没研究，恩，列入to do list。</p>
<h3 id="Mapbox"><a href="#Mapbox" class="headerlink" title="Mapbox"></a>Mapbox</h3><p>Mapbox国内13年就有报道过了，感兴趣的同学可以点下面的链接。<br><a href="http://www.pingwest.com/demo/mapbox/" target="_blank" rel="external">创立3年没要投资人一分钱，没销售人员——个性定制地图网站Mapbox是如何服务900家付费客户，并养活30号员工的</a></p>
<p>也可以直接点<a href="https://www.mapbox.com/" target="_blank" rel="external">这里</a>前往<code>Mapbox</code>的官方网站，可以看到很多很漂亮的应用。</p>
<p><code>Mapbox</code>实际上是一个平台，提供免费创建并定制个性化地图的服务，可以根据用户需要定制不同风格的地图，在上面加载你的数据图层等等。而上面的这个项目实际使用了<a href="https://www.mapbox.com/mapbox-gl-js/api/" target="_blank" rel="external">Mapbox GL JS</a> API来进行地图方面的可视化。注意，<a href="https://www.mapbox.com/mapbox-gl-js/api/" target="_blank" rel="external">Mapbox GL JS</a>是Mapbox提供的一个库，让用户可以方便地将生成的地图嵌入到自己的web应用中。当然，也支持导入到其他地图方案，如ios和android。</p>
<h3 id="OSRM"><a href="#OSRM" class="headerlink" title="OSRM"></a>OSRM</h3><p>可以看到第一张图里面显示了一些自行车和调度车的轨迹，然而原始数据中只有轨迹的起止点，也就是从哪个站点出发，哪个站点还车。</p>
<p><strong>那么，如何将这样的数据匹配到路网上呢？</strong></p>
<p>这就需要用到<a href="http://project-osrm.org/" target="_blank" rel="external">Open Source Routing Machine (OSRM) </a>。这是一个开源的路线生成引擎，给定起止点后，能够在路网中生成一条两点之间的最短路径，其基于的路网数据来自于<a href="https://www.openstreetmap.org/#map=5/51.500/-0.100" target="_blank" rel="external">OpenStreetMap</a>。</p>
<h2 id="利用OSRM生成轨迹数据"><a href="#利用OSRM生成轨迹数据" class="headerlink" title="利用OSRM生成轨迹数据"></a>利用OSRM生成轨迹数据</h2><p>这一段我们具体来介绍怎么利用OSRM生成轨迹数据。</p>
<p>ORSM开放的api<a href="https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md" target="_blank" rel="external">^osrm</a>如下<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="link">http://&#123;server&#125;/&#123;service&#125;/&#123;version&#125;/&#123;profile&#125;/&#123;coordinates&#125;</span>[<span class="string">.&#123;format&#125;</span>]?option=value&amp;option=value</div></pre></td></tr></table></figure></p>
<ul>
<li><code>server</code> : router.project-osrm.org</li>
<li><code>service</code> : 要使用的服务的名称，可选的服务如下，我们这里用的是route</li>
</ul>
<table>
<thead>
<tr>
<th>Service</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>route</td>
<td>求给定坐标点之间的最短路径</td>
</tr>
<tr>
<td>nearest</td>
<td>返回距离给定坐标最近的street segment</td>
</tr>
<tr>
<td>table</td>
<td>计算给定坐标的distance tables</td>
</tr>
<tr>
<td>match</td>
<td>将给定坐标点匹配到路网上</td>
</tr>
<tr>
<td>trip</td>
<td>计算给定坐标点的最短回路</td>
</tr>
<tr>
<td>tile</td>
<td>返回包含调试信息的vector tiles</td>
</tr>
</tbody>
</table>
<ul>
<li><code>version</code>：版本号，这里是v1</li>
<li><code>profile</code>：在这里设置了交通方式，可选参数为driving，walking，cycling</li>
<li><code>coordinates</code>：字符串格式 {longitude},{latitude};{longitude},{latitude}[;{longitude},{latitude} …] 或者 polyline({polyline}).</li>
<li><code>format</code>: 这个参数是可选的，默认为json，目前也没有其他值可以设置</li>
<li><code>option</code>：<br>下面是一些general options，但不是一定要设置：</li>
</ul>
<table>
<thead>
<tr>
<th>Option</th>
<th>Values</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>bearings</td>
<td>{bearing};{bearing}[;{bearing} …]</td>
<td>Limits the search to segments with given bearing in degrees towards true north in clockwise direction.</td>
</tr>
<tr>
<td>radiuses</td>
<td>{radius};{radius}[;{radius} …]</td>
<td>Limits the search to given radius in meters.</td>
</tr>
<tr>
<td>hints</td>
<td>{hint};{hint}[;{hint} …]</td>
<td>Hint to derive position in street network.</td>
</tr>
</tbody>
</table>
<p>在求取路径的时候，还有一些其他的options：<br>|Option |Values |Description|<br>|—-|——–|———|<br>|alternatives|  true, false (default)|  是否返回多条可能的路径|<br>|steps| true, false (default)|  是否对每段路径都返回详细的步骤，比如一些左转右转的信息|<br>|annotations| true, false (default)|  是否对于路径上的每个坐标点都返回附加的metadata|<br>|geometries |polyline (default), geojson|返回路径的格式|<br>|overview |simplified (default), full, false| 得到整条路径的overview，full的话就是最全的路径，simplified是根据显示级别得到的简化数据，或者是干脆不返回|<br>|continue_straight  |default (default), true, false|  强制要求走直线，并且不允许掉头|</p>
<p>这里给出最基本的python示例代码</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">import requests</div><div class="line"></div><div class="line">def calRoutes(<span class="keyword">start</span>, <span class="keyword">stop</span>):</div><div class="line">    <span class="keyword">url</span> = <span class="string">'http://router.project-osrm.org/route/v1/driving/'</span> + <span class="keyword">start</span> + <span class="string">';'</span> + <span class="keyword">stop</span> + <span class="string">'?geometries=geojson&amp;overview=simplified&amp;steps=false'</span></div><div class="line">    response = requests.get(<span class="keyword">url</span>)</div><div class="line">    <span class="keyword">data</span> = response.json()</div><div class="line">    routes = <span class="keyword">data</span>[<span class="string">"routes"</span>][<span class="number">0</span>]</div><div class="line">    <span class="keyword">return</span> routes</div><div class="line"></div><div class="line"><span class="keyword">start</span> = <span class="string">'120.38609,30.29742'</span></div><div class="line"><span class="keyword">stop</span> = <span class="string">'120.32375,30.2905'</span></div><div class="line">routes = calRoutes(<span class="keyword">start</span>, <span class="keyword">stop</span>)</div><div class="line">print(routes)</div></pre></td></tr></table></figure>
<p>输出的结果为：</p>
<figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;<span class="string">'duration'</span>: <span class="number">463.1</span>, <span class="string">'distance'</span>: <span class="number">7129.5</span>, <span class="string">'legs'</span>: [&#123;<span class="string">'distance'</span>: <span class="number">7129.5</span>, <span class="string">'duration'</span>: <span class="number">463.1</span>, <span class="string">'summary'</span>: <span class="string">''</span>, <span class="string">'steps'</span>: []&#125;], <span class="string">'geometry'</span>: &#123;<span class="string">'type'</span>: <span class="string">'LineString'</span>, <span class="string">'coordinates'</span>: [[<span class="number">120.386362</span>, <span class="number">30.297321</span>], [<span class="number">120.382159</span>, <span class="number">30.288818</span>], [<span class="number">120.379259</span>, <span class="number">30.289752</span>], [<span class="number">120.377031</span>, <span class="number">30.289848</span>], [<span class="number">120.347114</span>, <span class="number">30.289887</span>], [<span class="number">120.336178</span>, <span class="number">30.291638</span>], [<span class="number">120.328133</span>, <span class="number">30.295271</span>], [<span class="number">120.325014</span>, <span class="number">30.290114</span>], [<span class="number">120.323842</span>, <span class="number">30.29065</span>]]&#125;&#125;</div></pre></td></tr></table></figure>
<p>其实返回的data变量是一个json格式的数据，其中包含三个部分：</p>
<ul>
<li><strong>code</strong>：表征是否成功的变量，成功的话其值为OK</li>
<li><strong>waypoints</strong>: 所有的路径点</li>
<li><strong>routes</strong>: 包含了路径的数组</li>
</ul>
<p>因为我们api中没有设置返回多条路径，所以默认返回一条，但是要取出这条路径要访问<code>data[&quot;routes&quot;][0]</code>。</p>
<p>路径包含的信息参见上面的输出结果，包含了路径的长度，耗时，和各个节点的信息。</p>
<h2 id="将轨迹数据（路径）存入mysql数据库"><a href="#将轨迹数据（路径）存入mysql数据库" class="headerlink" title="将轨迹数据（路径）存入mysql数据库"></a>将轨迹数据（路径）存入mysql数据库</h2><p>轨迹数据生成好之后，就需要进行存储，否则每次都要重新再算太麻烦了。<br>mysql遵守OGC的OpenGIS Geometry Model，支持Point、LineString等多种数据对象，我们这里用到的是LineString。</p>
<h3 id="创建可以存储轨迹这类空间数据的表"><a href="#创建可以存储轨迹这类空间数据的表" class="headerlink" title="创建可以存储轨迹这类空间数据的表"></a>创建可以存储轨迹这类空间数据的表</h3><p>当前只有MyISAM引擎的数据表支持地理空间数据的存储，所以在创建数据表的时候必须进行声明。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> driving_routes(</div><div class="line">  stationA <span class="built_in">VARCHAR</span>(<span class="number">16</span>),</div><div class="line">  stationB <span class="built_in">VARCHAR</span>(<span class="number">16</span>),</div><div class="line">  <span class="keyword">duration</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</div><div class="line">  distance <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</div><div class="line">  routes LINESTRING</div><div class="line">)<span class="keyword">ENGINE</span>=MyISAM;</div></pre></td></tr></table></figure></p>
<p>创建后的表结果如下图</p>
<p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/mapbox/create_table.png" alt="create_table"></p>
<h3 id="插入一条数据"><a href="#插入一条数据" class="headerlink" title="插入一条数据"></a>插入一条数据</h3><p>插入数据要用到ST_GeomFromText的函数，将数据转化为数据库内部的几何格式。</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">INSERT INTO `driving_routes` VALUES(</div><div class="line">'<span class="number">3942</span>',</div><div class="line">'<span class="number">3218</span>',</div><div class="line">'<span class="number">239.3</span>',</div><div class="line">'<span class="number">3295.2</span>',</div><div class="line">ST_GeomFromText('LINESTRING(<span class="number">120.7205165</span> <span class="number">27.98760837</span>, <span class="number">120.719859</span> <span class="number">27.987895</span>, <span class="number">120.73371</span> <span class="number">27.987744</span>)')</div><div class="line">);</div></pre></td></tr></table></figure>
<h3 id="提取数据"><a href="#提取数据" class="headerlink" title="提取数据"></a>提取数据</h3><p>提取数据则相反，<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> ST_AsText(routes) <span class="keyword">from</span> <span class="symbol">`driving_routes`</span>;</div></pre></td></tr></table></figure></p>
<p>其实存为linestring类型之后还可以在sql中进行一些其他操作</p>
<p>例如需要查找一辆车在某一段时间内是否在一段区域内经过，用点来说明的话，就是一个空间坐标点在一个特定时间段内是否包含在一个特定的矩形区域内。<code>MBRWithin(g1,g2)</code>函数应该能达到这个功能:</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT AsText(pnt) FROM `gis` WHERE MBRWithin(pnt,GeomFromText('Polygon(<span class="number">1</span> <span class="number">1</span>,<span class="number">0</span> <span class="number">30</span>,<span class="number">30</span> <span class="number">30</span>,<span class="number">30</span> <span class="number">0</span>，<span class="number">1</span> )'))</div></pre></td></tr></table></figure>
<h2 id="利用Mapbox进行可视化"><a href="#利用Mapbox进行可视化" class="headerlink" title="利用Mapbox进行可视化"></a>利用Mapbox进行可视化</h2><p><strong>请将鼠标移动到图片上并点击可看到大图！！！！</strong></p>
<h3 id="注册并进入studio"><a href="#注册并进入studio" class="headerlink" title="注册并进入studio"></a>注册并进入studio</h3><p>首先当然是注册一个mapbox的账号，点击<a href="https://www.mapbox.com/studio/signup/" target="_blank" rel="external">注册链接</a>，在这个页面输入用户名、邮箱、密码进行注册。</p>
<p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/mapbox/sign_up.png" alt="sign_up"></p>
<p>完成注册后登陆mapbox，就会进入到studio的界面，如下图所示。</p>
<p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/mapbox/studio_first.png" alt="studio_first"></p>
<p>被打码的区域，上面的是用户名，下面这个<code>access token</code>是所谓的访问令牌，也就是说，这是每个账户独一无二的一个码，是标明身份的一串字符，在使用Mapbox的API和库函数都需要先提供这个token。</p>
<p>左边一栏中有Home, Styles, Tilesets, Datasets, Status, Classic等选项卡，其功能分别是：</p>
<ul>
<li>Home: 主界面，各种功能的入口</li>
<li>Styles: 可视化的核心，控制了地图的各种参数以及数据以何种格式进行显示。在Style中可以对每个图层进行各种细节的编辑，功能非常强大</li>
<li>Tilesets: 这是创建好的各种图层数据</li>
<li>Datasets: 用户自己上传的数据</li>
<li>Status: 在这里可以看到我们账户的一些统计信息，例如地图的访问次数(map views)等等。我们注册的一般是免费账户，如果访问次数，流量等等到达一定限制的话是需要收费的，收费情况如下图所示，免费账户有50,000次访问，如果只是科研上用下其实一般用不掉的啦</li>
</ul>
<p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/mapbox/price.png" alt="price"></p>
<h3 id="创建一个style"><a href="#创建一个style" class="headerlink" title="创建一个style"></a>创建一个style</h3><p>进入studio之后，下面就可以创建一个style。</p>
<p>首先，在home页面下，点击<code>Go to styles</code>的按钮或者直接单击左侧的<code>Styles</code>选卡。</p>
<p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/mapbox/go_to_styles.png" alt="go_to_styles"></p>
<p>进入到Styles的页面如下图所示，可以看到6个自带的Style，可以直接编辑使用，但是推荐还是点击圆圈处的<code>New style</code>按钮，以这些自带的Style为基础创建自己的Style。</p>
<p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/mapbox/new_style.png" alt="new_style"></p>
<p>在弹出的窗口中，输入自己的Style的名字，例如Test，然后选择下面的某个自带的Style作为模板，单击create。</p>
<p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/mapbox/create_style.png" alt="create_style"></p>
<p>单击后就会进入到Style的编辑页面，如下图所示。</p>
<p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/mapbox/style_first.png" alt="style_first"></p>
<p>双击地图进行放大，我们找到要编辑的区域，例如杭州，然后对某个图层进行编辑。</p>
<p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/mapbox/style_color.png" alt="style_color"></p>
<p>这里以更改道路名称的颜色为例进行讲解，单击某条道路，就会显示出此处包含的图层，这里包含文字的图层是<code>road_label_large</code>，单击此图层或者在左侧找到这一图层，就可以点开此图层的编辑页面，要更改颜色就直接在<code>color</code>那一栏选择自己喜欢的颜色即可，地图上会实时的跟随编辑进行调整。</p>
<blockquote>
<p><strong>注意</strong>：这里做的所有操作都会自动保存，想撤销上一步操作的话可以按下<code>crtl+Z</code>，为了熟悉studio，你可以先随便试试各种功能，比如字体大小，线型，透明度，icon，placement等等，地图上几乎一切元素都是可以根据需要调整的。点击左侧侧边栏中油漆桶状的Style图标，回到Style界面，能够看到自己刚才创建的<code>Test</code> Style，在Test右边的选项中点击<code>Revert to last publish</code>，即可恢复成上一次<strong>pulish</strong>的样子。</p>
<p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/mapbox/revert.png" alt="revert"></p>
<p><strong>因此，pulish等于说是手动保存的意思！！没事的话不需要publish，确定修改已经完成，并且没有问题的时候才点击编辑界面的左栏右上角的publish按钮进行发布！</strong></p>
</blockquote>
<h3 id="上传自己的数据"><a href="#上传自己的数据" class="headerlink" title="上传自己的数据"></a>上传自己的数据</h3><p>基本的调整熟悉了之后，下一步就可以上传数据啦！</p>
<p>Mapbox支持多种格式的数据，如GeoJson或者CSV等等，这里我们采用GeoJson为例。把刚才得到的轨迹数据处理成GeoJson的格式<a href="http://www.oschina.net/translate/geojson-spec?cmp" target="_blank" rel="external">^geojson</a>。下面给出一个比较短的GeoJson的文件示例，其中包含两条轨迹数据，属于LineString的类型：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"features"</span>: [</div><div class="line">    &#123;</div><div class="line">      <span class="attr">"properties"</span>: &#123;</div><div class="line">        <span class="attr">"prop0"</span>: <span class="string">"value0"</span></div><div class="line">      &#125;,</div><div class="line">      <span class="attr">"id"</span>: <span class="string">"&#123;feature_id&#125;"</span>,</div><div class="line">      <span class="attr">"geometry"</span>: &#123;</div><div class="line">        <span class="attr">"coordinates"</span>: [</div><div class="line">          [</div><div class="line">            <span class="number">120.382304</span>,</div><div class="line">            <span class="number">30.288768</span></div><div class="line">          ],</div><div class="line">          [</div><div class="line">            <span class="number">120.379259</span>,</div><div class="line">            <span class="number">30.289752</span></div><div class="line">          ],</div><div class="line">          [</div><div class="line">            <span class="number">120.377224</span>,</div><div class="line">            <span class="number">30.289839</span></div><div class="line">          ],</div><div class="line">          [</div><div class="line">            <span class="number">120.377248</span>,</div><div class="line">            <span class="number">30.30479</span></div><div class="line">          ]</div><div class="line">        ],</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"LineString"</span></div><div class="line">      &#125;,</div><div class="line">      <span class="attr">"type"</span>: <span class="string">"Feature"</span></div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">      <span class="attr">"properties"</span>: &#123;</div><div class="line">        <span class="attr">"prop0"</span>: <span class="string">"value0"</span></div><div class="line">      &#125;,</div><div class="line">      <span class="attr">"id"</span>: <span class="string">"&#123;feature_id&#125;"</span>,</div><div class="line">      <span class="attr">"geometry"</span>: &#123;</div><div class="line">        <span class="attr">"coordinates"</span>: [</div><div class="line">          [</div><div class="line">            <span class="number">120.344083</span>,</div><div class="line">            <span class="number">30.309248</span></div><div class="line">          ],</div><div class="line">          [</div><div class="line">            <span class="number">120.344496</span>,</div><div class="line">            <span class="number">30.303979</span></div><div class="line">          ],</div><div class="line">          [</div><div class="line">            <span class="number">120.343989</span>,</div><div class="line">            <span class="number">30.303754</span></div><div class="line">          ],</div><div class="line">          [</div><div class="line">            <span class="number">120.333314</span>,</div><div class="line">            <span class="number">30.303028</span></div><div class="line">          ]</div><div class="line">        ],</div><div class="line">        <span class="attr">"type"</span>: <span class="string">"LineString"</span></div><div class="line">      &#125;,</div><div class="line">      <span class="attr">"type"</span>: <span class="string">"Feature"</span></div><div class="line">    &#125;</div><div class="line">  ],</div><div class="line">  <span class="attr">"type"</span>: <span class="string">"FeatureCollection"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>将上述轨迹数据存为test_routes.geojson文件，然后进行上传。上传之前可以先在这个<a href="http://geojson.io/#map=14/30.2991/120.3531" target="_blank" rel="external">检测网站</a>把内容粘贴进去进行检测，如果格式正确就能绘制出轨迹。</p>
<p>上传数据的步骤如下：</p>
<ul>
<li>先在Dataset的页面点击<code>New dataset</code>的按钮，再选择<code>Upload</code>，点击<code>Select a file</code>，在弹出的窗口中选中相应的数据文件，上传后点击<code>create</code>创建新的数据集。</li>
</ul>
<p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/mapbox/select_dataset.png" alt="select_dataset"></p>
<ul>
<li>点完<code>create</code>会见到下图所示的页面，选择<code>View detials</code>或者<code>Start editing</code>都可以。<code>View detials</code>的页面上再点击<code>Edit</code>也可以进入到编辑页面。</li>
</ul>
<p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/mapbox/create_dataset.png" alt="create_dataset"></p>
<ul>
<li>进入编辑页面如下图所示，可以看到已经有两条轨迹数据显示了出来，点击左侧栏右上角的<code>Export</code>蓝色按钮可以将数据从<code>Dataset</code>导出为<code>Tileset</code>（其实在这个页面也可以自己添加点、线、图形等等，功能非常强大，当然现在我们可以先忽略之…）</li>
</ul>
<p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/mapbox/edit.png" alt="edit"></p>
<ul>
<li>点完<code>Export</code>，会跳出一个提示框，框中可以选择是导出到新的Tileset还是更新一个已有的，默认是导出到新的，所以只要再点输入框后面的<code>Export</code>按钮即可，之后左下角会出现处理的提示框，等图中的<code>processing</code>变成<code>Succeeded a few seconds ago</code>就可以关掉提示框，这时数据的上传和图层的建立就完成啦！</li>
</ul>
<p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/mapbox/processing.png" alt="processing"></p>
<blockquote>
<p>其实可以直接在tileset里面上传geojson文件，或者直接在style中add new layer中上传geojson文件，从dataset里面上传，然后一步步创建tileset，添加到style中，这是最基本最复杂的步骤。熟悉后可以采用更直接的方法。</p>
<p> 贴一段网站上的说明：<br>Datasets vs Tilesets<br>Tilesets are fast light, and easy to style. Datasets are lossless, editable, and can’t be styled. Think of Tilesets as the delivery format for the data in your Datasets.</p>
</blockquote>
<h3 id="加载数据，发布style"><a href="#加载数据，发布style" class="headerlink" title="加载数据，发布style"></a>加载数据，发布style</h3><p>数据上传好了，下一步就是加载。</p>
<p>先回到Style页面，点击<code>Test</code>后面的<code>Edit</code>，回到刚才创建的<code>Test</code> Style里面。</p>
<p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/mapbox/style_edit_again.png" alt="style_edit_again"></p>
<p>点击左侧上方的<code>+ New layer</code>按钮，再点击<code>No tileset</code>处，就可以选择已经有的一些tileset添加到该style中，这里我们选择刚才创建的<code>test_routes</code>，然后再点击<code>create layer</code>（选择<code>test_routes</code>之后左边会出现一些filter啊之类的选项，可以做一些设置，感兴趣的话可以再查文档，这里先略过，直接点create就好。）</p>
<p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/mapbox/add_new_layer.png" alt="add_new_layer"></p>
<p>创建完毕会出现style编辑的页面，双击地图放大到杭州区域，找到我们绘制的两条轨迹，然后可以改变其颜色，还可以做其他设置。</p>
<p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/mapbox/publish.png" alt="publish"></p>
<p>至此，数据的加载就完成了，单击左上角的<code>publish</code>按钮就即可完成该style的发布。</p>
<h3 id="创建可视化web端"><a href="#创建可视化web端" class="headerlink" title="创建可视化web端"></a>创建可视化web端</h3><p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/mapbox/success.png" alt="success"></p>
<p>发布完成后的页面如上图所示，点击<code>Preview, develop &amp; use</code>，可以看到使用的相关信息，如下图所示。可以将网页进行分享，可以将生成的style展示到web端，嵌入到Android或者ios的app中等等。其中，我们需要的两条信息是<code>Style URL</code>和<code>Access token</code>。</p>
<p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/mapbox/develop.png" alt="develop"></p>
<p>另外还需要在style中取得map的经纬度信息和缩放倍数信息，如下图标注的部分。</p>
<p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/mapbox/position.png" alt="position"></p>
<p>新建html文件，插入以下内容，按照已经准备好的四条信息替换需要的部分：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">'utf-8'</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">'viewport'</span> <span class="attr">content</span>=<span class="string">'initial-scale=1,maximum-scale=1,user-scalable=no'</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">'https://api.tiles.mapbox.com/mapbox-gl-js/v0.23.0/mapbox-gl.js'</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">'https://api.tiles.mapbox.com/mapbox-gl-js/v0.23.0/mapbox-gl.css'</span> <span class="attr">rel</span>=<span class="string">'stylesheet'</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">        <span class="selector-tag">body</span> &#123; <span class="attribute">margin</span>:<span class="number">0</span>; <span class="attribute">padding</span>:<span class="number">0</span>; &#125;</div><div class="line">        <span class="selector-id">#map</span> &#123; <span class="attribute">position</span>:absolute; <span class="attribute">top</span>:<span class="number">0</span>; <span class="attribute">bottom</span>:<span class="number">0</span>; <span class="attribute">width</span>:<span class="number">100%</span>; &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">'map'</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript"></span></div><div class="line">mapboxgl.accessToken = <span class="string">'您的access token'</span>;</div><div class="line"><span class="keyword">var</span> map = <span class="keyword">new</span> mapboxgl.Map(&#123;</div><div class="line">    container: <span class="string">'map'</span>, <span class="comment">// container id</span></div><div class="line">    style: <span class="string">'您的style url'</span>, <span class="comment">//hosted style id</span></div><div class="line">    center: [<span class="number">120.353031</span>, <span class="number">30.294875</span>], <span class="comment">// starting position，可替换为您自己的地图中心坐标</span></div><div class="line">    zoom: <span class="number">12.6</span> <span class="comment">// starting zoom，可替换为您自己的地图缩放倍数</span></div><div class="line">&#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>双击html文件，就可以在浏览器中看到您的web端可视化结果啦。</p>
<p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/mapbox/finish.png" alt="finish"></p>
<p>当然，本教程只是实现了显示了两条轨迹数据在地图上的一个web端，要想实现丰富生动的可视化效果需要更多的数据，并需要更复杂的技术知识：需要将要点线结合，添加icon，在数据的propoties里面添加相关属性，给不同的属性设置不同的style等等。关于Mapbox GL JS如何使用的更多的例子请参见<a href="https://www.mapbox.com/mapbox-gl-js/examples/" target="_blank" rel="external">example</a>，对example中的功能进行复杂的组合就可以得到类似于开篇中的效果啦~ fighting！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在做与交通有关的项目时，往往要做一些轨迹数据的可视化，这里介绍了利用Mapbox平台加OSRM进行轨迹数据可视化的方法。首先需要利用OSRM生成轨迹数据，然后把轨迹数据或者说是路径存储至mysql数据库，最后提取相应数据传入Mapbox，完成可视化的工作。&lt;/p&gt;
    
    </summary>
    
      <category term="research" scheme="http://hujichn.github.io/categories/research/"/>
    
    
      <category term="bike" scheme="http://hujichn.github.io/tags/bike/"/>
    
      <category term="visualization" scheme="http://hujichn.github.io/tags/visualization/"/>
    
      <category term="Mapbox" scheme="http://hujichn.github.io/tags/Mapbox/"/>
    
      <category term="OSRM" scheme="http://hujichn.github.io/tags/OSRM/"/>
    
      <category term="mysql" scheme="http://hujichn.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Tips on data analysis by python (advanced)</title>
    <link href="http://hujichn.github.io/2016/05/13/Tips%20on%20data%20analysis%20by%20python%20(advanced)/"/>
    <id>http://hujichn.github.io/2016/05/13/Tips on data analysis by python (advanced)/</id>
    <published>2016-05-13T06:19:00.000Z</published>
    <updated>2017-03-14T07:13:35.013Z</updated>
    
    <content type="html"><![CDATA[<p>第一篇主要是一些比较基础的问题，接下来遇到了稍微复杂一些的问题，因此整理在这个advanced tips里面，以备不时之需 :)</p>
<p>主要内容包括一些pandas的常用操作，利用pandas处理日期中的假期，python的异常处理、函数定义、装饰器的简单介绍等等。</p>
<a id="more"></a>
<p>author: <a href="https://hujichn.github.io">@Huji</a></p>
<p>[toc]</p>
<h3 id="1-对于groupby的结果分别apply函数进行计算，类似reduce的感觉"><a href="#1-对于groupby的结果分别apply函数进行计算，类似reduce的感觉" class="headerlink" title="1. 对于groupby的结果分别apply函数进行计算，类似reduce的感觉"></a>1. 对于groupby的结果分别apply函数进行计算，类似reduce的感觉</h3><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># 输入df，也就是其中的每一个group</div><div class="line">def myFunc(df)：</div><div class="line">    p = df[<span class="string">"p"</span>].<span class="built_in">values</span></div><div class="line">    a = df[<span class="string">"a"</span>].<span class="built_in">values</span> </div><div class="line">    # 返回两个值的话要用Series来返回</div><div class="line">    <span class="built_in">return</span> pd.Series(&#123;<span class="string">"sum"</span>: a.<span class="built_in">sum</span>(), <span class="string">"rmsle"</span>: <span class="built_in">np</span>.<span class="built_in">sqrt</span>(<span class="built_in">np</span>.squre(<span class="built_in">np</span>.<span class="built_in">log</span>(p+<span class="number">1</span>)-<span class="built_in">np</span>.<span class="built_in">log</span>(a+<span class="number">1</span>)).<span class="built_in">mean</span>())&#125;)</div><div class="line"></div><div class="line">dfGroupby.<span class="built_in">apply</span>(myFunc)</div></pre></td></tr></table></figure>
<h3 id="2-把字符串表示的时间进行加减，得到新字符串"><a href="#2-把字符串表示的时间进行加减，得到新字符串" class="headerlink" title="2. 把字符串表示的时间进行加减，得到新字符串"></a>2. 把字符串表示的时间进行加减，得到新字符串</h3><figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">from pandas.tslib <span class="built_in">import</span> Timestamp</div><div class="line">from pandas.tseries.offsets <span class="built_in">import</span> *</div><div class="line"><span class="attr">eventsDate</span> = “<span class="number">2013</span>-<span class="number">10</span>-<span class="number">22</span>”</div><div class="line"><span class="attr">eventsDate</span> = Timestamp(eventsDate)</div><div class="line"><span class="attr">dayBackward</span> = str((eventsDate - DateOffset(<span class="attr">days=1)).date())</span></div><div class="line"><span class="attr">dayForward</span> = str((eventsDate + DateOffset(<span class="attr">days=1)).date())</span></div></pre></td></tr></table></figure>
<h3 id="3-python中的异常处理简介"><a href="#3-python中的异常处理简介" class="headerlink" title="3. python中的异常处理简介"></a>3. python中的异常处理简介</h3><p>有时候网络有点崩，比如要从某网页抓取数据，经常由于网络原因中就error，这个时候真是痛心疾首，加入异常处理的逻辑可以使得程序放心运行。:）</p>
<p>异常处理的基本流程如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span>:</div><div class="line">    Normal execution block</div><div class="line"><span class="keyword">except</span> A:</div><div class="line">    Exception A handle</div><div class="line"><span class="keyword">except</span> B:</div><div class="line">    Exception B handle</div><div class="line"><span class="keyword">except</span>:</div><div class="line">    Other exception handle</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    <span class="keyword">if</span> no exception,get here</div><div class="line"><span class="keyword">finally</span>:</div><div class="line">    print(<span class="string">"finally"</span>)</div></pre></td></tr></table></figure></p>
<p>其中A, B这样的异常名称不清楚的话，可以先看一下<a href="http://www.runoob.com/python/python-exceptions.html" target="_blank" rel="external">python中的基本异常类型</a>。</p>
<p>还是不知道Error的类型的话，可以暂时先写<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">except Exception <span class="keyword">as</span> <span class="keyword">ex</span>：</div><div class="line">    <span class="keyword">print</span>(<span class="keyword">type</span>(<span class="keyword">ex</span>))</div><div class="line">    <span class="keyword">print</span>(<span class="keyword">ex</span>.<span class="keyword">args</span>)</div></pre></td></tr></table></figure></p>
<p>这样一般可以得到Error的名称。</p>
<h3 id="4-由字典建立一行的DataFrame"><a href="#4-由字典建立一行的DataFrame" class="headerlink" title="4. 由字典建立一行的DataFrame"></a>4. 由字典建立一行的DataFrame</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">firstLine</span> = pd.DataFrame([&#123;<span class="string">"rent_count"</span>: <span class="number">0</span>, <span class="string">"netid"</span>: netid&#125;], index=[startTime])</div></pre></td></tr></table></figure>
<p>需要注意的是，内容和index都要记得以list的形式传输</p>
<h3 id="5-填充缺失值-fillna"><a href="#5-填充缺失值-fillna" class="headerlink" title="5. 填充缺失值 fillna"></a>5. 填充缺失值 fillna</h3><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">r[<span class="string">'Wind SpeedMPH'</span>].fillna(<span class="number">0</span>, inplace=<span class="keyword">True</span>)</div><div class="line">r[<span class="string">'VisibilityMPH'</span>].fillna(<span class="function"><span class="keyword">method</span>='<span class="title">ffill</span>', <span class="title">inplace</span>=<span class="title">True</span>)</span></div><div class="line"><span class="title">r</span>['<span class="title">Humidity</span>'].<span class="title">fillna</span><span class="params">(<span class="keyword">method</span>=<span class="string">'bfill'</span>, inplace=<span class="keyword">True</span>)</span></div></pre></td></tr></table></figure>
<h3 id="6-求出假期的方法"><a href="#6-求出假期的方法" class="headerlink" title="6. 求出假期的方法"></a>6. 求出假期的方法</h3><p>目前找到了两种方法，我们以美国2013年的法定节假日为例写一下示例代码：</p>
<ul>
<li>第一种是Pandas中的Holiday模块提供的功能：</li>
</ul>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">from datetime import * </div><div class="line">from pandas.tseries.holiday import USFederalHolidayCalendar</div><div class="line">cal = USFederalHolidayCalendar()</div><div class="line">cal.holidays(datetime(<span class="number">2013</span>, <span class="number">1</span>, <span class="number">1</span>), datetime(<span class="number">2013</span>, <span class="number">12</span>, <span class="number">31</span>))</div></pre></td></tr></table></figure>
<p>输出的格式是：</p>
<p><img src="http://7xsoqo.com2.z0.glb.clouddn.com/python/tips/holidayUSA2013.png" alt="holidayUSA2013"></p>
<ul>
<li>后一种应用范围更广，可以支持很多国家，对于US来说甚至细到州的假期，所以还是比较好用的。需要install workalendar这个库，代码如下：</li>
</ul>
<figure class="highlight capnproto"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> date</div><div class="line"><span class="keyword">from</span> workalendar.usa <span class="keyword">import</span> NewYork</div><div class="line">cal = NewYork()</div><div class="line">cal.holidays(<span class="number">2013</span>)</div></pre></td></tr></table></figure>
<p>得到的结果是：</p>
<p><img src="http://7xsoqo.com2.z0.glb.clouddn.com/python/tips/holidayNYC2013.png" alt="holidayNYC2013"></p>
<h3 id="7-去掉列表中重复元素的方法"><a href="#7-去掉列表中重复元素的方法" class="headerlink" title="7. 去掉列表中重复元素的方法"></a>7. 去掉列表中重复元素的方法</h3><ul>
<li>一维的list可以利用集合的方法,但会改变元素的顺序：<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">l1 = [<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'a'</span>,<span class="string">'a'</span>]</div><div class="line">l2 = list(set(l1))</div><div class="line"><span class="function"><span class="title">print</span><span class="params">(l2)</span></span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>要想不改变顺序可以用<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">l1 = [<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'a'</span>,<span class="string">'a'</span>]</div><div class="line">l2 = sorted(<span class="built_in">set</span>(l1),<span class="built_in">key</span>=l1.index)</div><div class="line"><span class="built_in">print</span>(l2)</div></pre></td></tr></table></figure></p>
<ul>
<li>如果不是一维的list可以用以下方法，或者遍历，原理是一样的。</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">a</span> = [<span class="selector-tag">a</span>[i] <span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> range(len(a)) <span class="keyword">if</span> <span class="selector-tag">a</span>[i] not <span class="keyword">in</span> <span class="selector-tag">a</span>[:i]]</div></pre></td></tr></table></figure>
<h3 id="8-统计嵌套列表里面各个list出现的次数"><a href="#8-统计嵌套列表里面各个list出现的次数" class="headerlink" title="8. 统计嵌套列表里面各个list出现的次数"></a>8. 统计嵌套列表里面各个list出现的次数</h3><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">import pandas as pd</div><div class="line"></div><div class="line">allList = [[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]]</div><div class="line">mDict = &#123;<span class="string">'list'</span>:[],<span class="string">'num'</span>:[]&#125;</div><div class="line">print(mDict)</div><div class="line"></div><div class="line">def calOccurrence(mList):</div><div class="line">    if mList in mDict[<span class="string">'list'</span>]:</div><div class="line">        loc = mDict[<span class="string">'list'</span>].index(mList)</div><div class="line">        mDict[<span class="string">'num'</span>][loc] = mDict[<span class="string">'num'</span>][loc] + <span class="number">1</span></div><div class="line">    else:</div><div class="line">        mDict[<span class="string">'list'</span>].append(mList)</div><div class="line">        mDict[<span class="string">'num'</span>].append(<span class="number">1</span>)</div><div class="line"></div><div class="line">for mList in allList:</div><div class="line">    calOccurrence(mList)</div><div class="line"></div><div class="line">print(pd.<span class="symbol">DataFrame</span>(mDict))</div></pre></td></tr></table></figure>
<p>输出结果是<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">        <span class="type">list</span>  num</div><div class="line"><span class="number">0</span>  [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]    <span class="number">3</span></div><div class="line"><span class="number">1</span>  [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]    <span class="number">1</span></div></pre></td></tr></table></figure></p>
<p>本来想利用pandas的groupby+count来做，但是groupby是求by的对象的hash值进行group，list对象不能求hash值也就不能groupby，所以还是用循环来维护一个字典，统计出各个list的出现次数。</p>
<h3 id="9-Python函数定义-pythondoc"><a href="#9-Python函数定义-pythondoc" class="headerlink" title="9. Python函数定义^pythondoc"></a>9. Python函数定义<a href="http://www.pythondoc.com/pythontutorial3/controlflow.html#tut-defining" target="_blank" rel="external">^pythondoc</a></h3><ul>
<li>引入一个形如 **name 的参数时，它接收一个字典</li>
<li>引入一个形如 *name 的参数时，它接收一个元祖</li>
</ul>
<p>对于如下代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">cheeseshop</span><span class="params">(kind, *arguments, **keywords)</span>:</span></div><div class="line">    print(<span class="string">"-- Do you have any"</span>, kind, <span class="string">"?"</span>)</div><div class="line">    print(<span class="string">"-- I'm sorry, we're all out of"</span>, kind)</div><div class="line">    <span class="keyword">for</span> arg <span class="keyword">in</span> arguments:</div><div class="line">        print(arg)</div><div class="line">    print(<span class="string">"-"</span> * <span class="number">40</span>)</div><div class="line">    keys = sorted(keywords.keys())</div><div class="line">    <span class="keyword">for</span> kw <span class="keyword">in</span> keys:</div><div class="line">        print(kw, <span class="string">":"</span>, keywords[kw])</div></pre></td></tr></table></figure></p>
<p>它可以像这样调用：<br><figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cheeseshop(<span class="string">"Limburger"</span>, <span class="string">"It's very runny, sir."</span>,</div><div class="line">           <span class="string">"It's really very, VERY runny, sir."</span>,</div><div class="line">           shopkeeper=<span class="string">"Michael Palin"</span>,</div><div class="line">           <span class="keyword">client</span>=<span class="string">"John Cleese"</span>,</div><div class="line">           sketch=<span class="string">"Cheese Shop Sketch"</span>)</div></pre></td></tr></table></figure></p>
<p>输出结果为：<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="bullet">-- </span>Do you have any Limburger ?</div><div class="line"><span class="bullet">-- </span>I'm sorry, we're all out of Limburger</div><div class="line">It's very runny, sir.</div><div class="line"><span class="section">It's really very, VERY runny, sir.</span></div><div class="line">----------------------------------------</div><div class="line">client : John Cleese</div><div class="line">shopkeeper : Michael Palin</div><div class="line">sketch : Cheese Shop Sketch</div></pre></td></tr></table></figure></p>
<h3 id="10-python装饰器简单解析-wrapper"><a href="#10-python装饰器简单解析-wrapper" class="headerlink" title="10. python装饰器简单解析^wrapper"></a>10. python装饰器简单解析<a href="http://python.jobbole.com/81683/" target="_blank" rel="external">^wrapper</a></h3><p>装饰器提供了一种方法，在函数和类定义的末尾插入自动运行的代码，相当于对函数进行一种扩展。</p>
<p>下面是一个简单地把日志输出到界面的例子<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">logger</span><span class="params">(func)</span>:</span></div><div class="line">    print(<span class="string">"in decorator"</span>)</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span><span class="params">(*args, **kwargs)</span>:</span></div><div class="line">        print(<span class="string">"Arguments were: %s, %s"</span> % (args, kwargs))</div><div class="line">        <span class="keyword">return</span> func(*args, **kwargs)</div><div class="line">    <span class="keyword">return</span> inner</div></pre></td></tr></table></figure></p>
<p>请注意我们的函数inner，它能够接受任意数量和类型的参数并把它们传递给被包装的方法，这让我们能够用这个装饰器来装饰任何方法，例如：装饰下面的foo1函数。</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@logger</span></div><div class="line">def foo1(x, y=<span class="number">1</span>):</div><div class="line">     <span class="keyword">return</span> x * y</div><div class="line">print(foo1(5, 4))</div><div class="line">orint(foo1(1))</div></pre></td></tr></table></figure>
<p>输出结果如下：<br><figure class="highlight coq"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">in</span> decorator</div><div class="line"><span class="keyword">Arguments</span> were: (<span class="number">5</span>, <span class="number">4</span>), &#123;&#125;</div><div class="line"><span class="number">20</span></div><div class="line"><span class="keyword">Arguments</span> were: (<span class="number">1</span>,), &#123;&#125;</div><div class="line"><span class="number">1</span></div></pre></td></tr></table></figure></p>
<p>值得注意的是，第一次调用<code>foo1(5,4)</code>时，相当于<br><figure class="highlight gcode"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">fo<span class="meta">o1</span> = logger<span class="comment">(foo1)</span></div><div class="line">fo<span class="meta">o1</span><span class="comment">(5,4)</span></div></pre></td></tr></table></figure></p>
<p>第二次调用<code>foo1(1)</code>时，foo1已经是logger(foo1)的返回值了。</p>
<p>所以只有第一次调用时输出了<code>in decorator</code></p>
<p>在python的functools模块中，跟装饰器相关的有三个主要函数partial()，update_wrapper()和wraps()<a href="http://blog.jkey.lu/2013/03/15/python-decorator-and-functools-module/" target="_blank" rel="external">^decorator</a></p>
<p><strong>partial()</strong>主要功能我感觉就是<strong>把需要输入参数减少了</strong>，例如本来把输入的数字转化为二进制的话需要<code>int(&#39;11&#39;,base=2)</code>，但是利用partial新建一个函数<code>int2 = partial(int, base=2)</code>之后，就可以直接调用<code>int2(&#39;11&#39;)</code></p>
<p><strong>update_wrapper()</strong>的功能是把被封装的函数的module，name，doc和dict复制到封装的函数中去。</p>
<p>其源码涉及到以下两个函数：</p>
<p>setattr()<br>: setattr()表示你可以通过该方法，给对象添加或者修改指定属性，setattr()接受三个参数：setattr(对象，属性，属性的值)</p>
<p>getattr()<br>: getattr用于返回一个对象属性，或者方法</p>
<p><strong>wraps()</strong>函数相当于是用partial()把update_wrapper()又封装了一下，其实现如下。</p>
<figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">def wraps(wrapped, <span class="attr">assigned</span> = WPAPPER_ASSIGNMENTS, <span class="attr">updated</span> = WRAPPER_UPDATES):</div><div class="line">    return partial(update_wrapper, <span class="attr">wrapped</span> = wrapped, <span class="attr">assigned</span> = assigned, <span class="attr">updated</span> = updated)</div></pre></td></tr></table></figure>
<p>利用这三个函数可以方便地实现装饰器，参考下面的代码，和一般装饰器类似，都是定义了一个自己的装饰器函数。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_decorator</span><span class="params">(f)</span>:</span></div><div class="line"><span class="meta">     @wraps(f)</span></div><div class="line">     <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kwds)</span>:</span></div><div class="line">         print(<span class="string">'Calling decorated function'</span>)</div><div class="line">         <span class="keyword">return</span> f(*args, **kwds)</div><div class="line">     <span class="keyword">return</span> wrapper</div><div class="line"></div><div class="line"><span class="meta">@my_decorator</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">example</span><span class="params">()</span>:</span></div><div class="line">    <span class="string">'''这里是文档注释'''</span></div><div class="line">    print(<span class="string">'Called example function'</span>)</div><div class="line"></div><div class="line">example()</div><div class="line">print(example.__name__) <span class="comment"># 'example'</span></div><div class="line">print(example.__doc__) <span class="comment"># '这里是文档注释'</span></div></pre></td></tr></table></figure>
<p>其输出为</p>
<figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Calling decorated <span class="keyword">function</span></div><div class="line"><span class="title">Called</span> example <span class="keyword">function</span></div><div class="line"><span class="title">example</span></div><div class="line">这里是文档注释</div></pre></td></tr></table></figure>
<p>值得注意的是@wraps(f)一句，它把被装饰的函数的name，doc等参数复制到装饰器内部的wrapper函数中去，所以最后两句print的输出是<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">example</span></div><div class="line">这里是文档注释</div></pre></td></tr></table></figure></p>
<p>否则输出为</p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">wrapper</span></div><div class="line">None</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第一篇主要是一些比较基础的问题，接下来遇到了稍微复杂一些的问题，因此整理在这个advanced tips里面，以备不时之需 :)&lt;/p&gt;
&lt;p&gt;主要内容包括一些pandas的常用操作，利用pandas处理日期中的假期，python的异常处理、函数定义、装饰器的简单介绍等等。&lt;/p&gt;
    
    </summary>
    
      <category term="coding" scheme="http://hujichn.github.io/categories/coding/"/>
    
    
      <category term="Python" scheme="http://hujichn.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Win10上利用github+hexo建立博客的方法</title>
    <link href="http://hujichn.github.io/2016/04/06/Win10%E4%B8%8A%E5%88%A9%E7%94%A8github+hexo%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://hujichn.github.io/2016/04/06/Win10上利用github+hexo建立博客的方法/</id>
    <published>2016-04-06T08:55:47.000Z</published>
    <updated>2017-03-14T07:34:20.184Z</updated>
    
    <content type="html"><![CDATA[<p>这几天心血来潮在Github上建了个博客，纠结了半天才倒腾好，希望以后自己能多总结下学的知识，先从建立博客开始咯~</p>
<a id="more"></a>
<p>author: <a href="https://hujichn.github.io/">@Huji</a></p>
<h2 id="1-安装环境"><a href="#1-安装环境" class="headerlink" title="1. 安装环境"></a>1. 安装环境</h2><p>Windows 10 64位系统</p>
<hr>
<h2 id="2-创建自己的GitHub-Pages"><a href="#2-创建自己的GitHub-Pages" class="headerlink" title="2. 创建自己的GitHub Pages"></a>2. 创建自己的GitHub Pages</h2><ul>
<li><p>首先注册<a href="https://github.com/" target="_blank" rel="external">GitHub</a>账号，用户名如hujichn</p>
</li>
<li><p>参考<a href="https://pages.github.com/" target="_blank" rel="external">教程</a>创建<code>GitHub Pages</code>。</p>
</li>
<li><p>访问上述教程时，注意选择左边创建<code>User or organization site</code>。</p>
</li>
</ul>
<p><img src="http://static.zybuluo.com/huji/k9w3r3pthtflj27qc8293ty1/User%20or%20organization%20site.png" alt="User or organization site.png-9.8kB"></p>
<ul>
<li><p>第一步：Create a repository，注意name必须和用户名一致如hujichn.github.io</p>
</li>
<li><p>在What git client are you using？这一步，如果没有下载过<code>Github for Windows</code>，可以选择<code>I don&#39;t know</code>，后面会出现下载链接，点击下载即可。这个下载的是在线安装包，可能会慢的感人，我后来找了一个<a href="http://pan.baidu.com/s/1Hkewm" target="_blank" rel="external">离线安装包</a> <a href="http://www.yaozeyuan.online/?p=104" target="_blank" rel="external">^lixian</a>，双击运行GitHub.application即可安装。</p>
</li>
</ul>
<p><img src="http://static.zybuluo.com/huji/4v6i1chihhfmsg3kfzwqd3uy/githubwindows.png" alt="githubwindows.png-31.7kB"></p>
<hr>
<h2 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3. 安装Hexo"></a>3. 安装Hexo</h2><ul>
<li>第一步是安装<a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a>，根据自己的电脑选择合适的版本下载即可安装。 安装完成后添加Path环境变量，使npm命令生效。</li>
</ul>
<figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C:<span class="symbol">\P</span>rogram Files<span class="symbol">\n</span>odejs<span class="symbol">\n</span>ode_modules<span class="symbol">\n</span>pm</div></pre></td></tr></table></figure>
<p>安装完后在cmd中分别输入</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">node</span> <span class="title">-v</span></div><div class="line">npm -v</div></pre></td></tr></table></figure>
<p>如果都显示了版本号，那么就安装成功了。</p>
<ul>
<li>GitHub Windows安装好之后，桌面上应该有一个Git Shell，双击打开，输入以下命令换源，否则安装hexo速度感人。<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">npm</span> install -g cnpm --registry=https:<span class="regexp">//</span>registry.<span class="built_in">npm</span>.taobao.org</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://static.zybuluo.com/huji/qy08e7rtzpt9hd4ym5rii0zh/changeSourse.png" alt="changeSourse.png-3.2kB"></p>
<p>然后再输入以下两行命令：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cnpm <span class="keyword">install</span> hexo-cli -g</div><div class="line">cnpm <span class="keyword">install</span> hexo <span class="comment">--save</span></div></pre></td></tr></table></figure></p>
<p>安装完成后，在GitHub默认路径下建立一个hexo的文件夹，如<br><code>C:\Users\Huji\Documents\GitHub\hexo</code>。</p>
<p>在Git Shell中输入命令<code>cd hexo</code>切换到该文件夹下。再分别输入以下命令：</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo init</div><div class="line">cnpm <span class="keyword">install</span></div></pre></td></tr></table></figure>
<p>安装相关插件（复制以下命令，在Shell窗口里右键粘贴即可）</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">cnpm <span class="keyword">install</span> hexo-generator-<span class="keyword">index</span> <span class="comment">--save</span></div><div class="line">cnpm <span class="keyword">install</span> hexo-generator-<span class="keyword">archive</span> <span class="comment">--save</span></div><div class="line">cnpm <span class="keyword">install</span> hexo-generator-<span class="keyword">category</span> <span class="comment">--save</span></div><div class="line">cnpm <span class="keyword">install</span> hexo-generator-tag <span class="comment">--save</span></div><div class="line">cnpm <span class="keyword">install</span> hexo-<span class="keyword">server</span> <span class="comment">--save</span></div><div class="line">cnpm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></div><div class="line">cnpm <span class="keyword">install</span> hexo-deployer-heroku <span class="comment">--save</span></div><div class="line">cnpm <span class="keyword">install</span> hexo-deployer-rsync <span class="comment">--save</span></div><div class="line">cnpm <span class="keyword">install</span> hexo-deployer-openshift <span class="comment">--save</span></div><div class="line">cnpm <span class="keyword">install</span> hexo-renderer-marked@<span class="number">0.2</span> <span class="comment">--save</span></div><div class="line">cnpm <span class="keyword">install</span> hexo-renderer-stylus@<span class="number">0.2</span> <span class="comment">--save</span></div><div class="line">cnpm <span class="keyword">install</span> hexo-generator-feed@<span class="number">1</span> <span class="comment">--save</span></div><div class="line">cnpm <span class="keyword">install</span> hexo-generator-sitemap@<span class="number">1</span> <span class="comment">--save</span></div></pre></td></tr></table></figure>
<p>安装完成后，输入以下命令后，在浏览器中打开<code>localhost:4000</code>即可看到博客在本地的效果。在测试主题的一些效果的时候可以用这个命令在本地查看，等效果满意了再deploy到GitHub。<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">hexo s -g</span></div></pre></td></tr></table></figure></p>
<hr>
<h2 id="4-利用Hexo写博客并将Hexo产生的静态网页部署到GitHub"><a href="#4-利用Hexo写博客并将Hexo产生的静态网页部署到GitHub" class="headerlink" title="4. 利用Hexo写博客并将Hexo产生的静态网页部署到GitHub"></a>4. 利用Hexo写博客并将Hexo产生的静态网页部署到GitHub</h2><ul>
<li><p>更改博客的设置信息，在hexo文件夹下，打开<code>_config.yml</code>文件，输入以下代码 <a href="http://blog.csdn.net/jzooo/article/details/46781805" target="_blank" rel="external">^config_code</a>，并进行相应修改。</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#博客名称</span></div><div class="line"><span class="attr">title:</span> <span class="string">我的博客</span></div><div class="line"><span class="comment">#副标题</span></div><div class="line"><span class="attr">subtitle:</span> <span class="string">一天进步一点</span></div><div class="line"><span class="comment">#简介</span></div><div class="line"><span class="attr">description:</span> <span class="string">记录生活点滴</span></div><div class="line"><span class="comment">#博客作者（请修改）</span></div><div class="line"><span class="attr">author:</span> <span class="string">John</span> <span class="string">Doe</span></div><div class="line"><span class="comment">#博客语言</span></div><div class="line"><span class="attr">language:</span> <span class="string">zh-Fans</span></div><div class="line"><span class="comment">#时区</span></div><div class="line"><span class="attr">timezone:</span></div><div class="line"></div><div class="line"><span class="comment">#博客地址,与申请的GitHub一致（请修改）</span></div><div class="line"><span class="attr">url:</span> <span class="attr">http://elfwalk.github.io</span></div><div class="line"><span class="attr">root:</span> <span class="string">/</span></div><div class="line"><span class="comment">#博客链接格式</span></div><div class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></div><div class="line"><span class="attr">permalink_defaults:</span></div><div class="line"></div><div class="line"><span class="attr">source_dir:</span> <span class="string">source</span></div><div class="line"><span class="attr">public_dir:</span> <span class="string">public</span></div><div class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></div><div class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></div><div class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></div><div class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></div><div class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></div><div class="line"><span class="attr">skip_render:</span></div><div class="line"></div><div class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># File name of new posts</span></div><div class="line"><span class="attr">default_layout:</span> <span class="string">post</span></div><div class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></div><div class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></div><div class="line"><span class="attr">filename_case:</span> <span class="number">0</span></div><div class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></div><div class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></div><div class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></div><div class="line"><span class="attr">future:</span> <span class="literal">true</span></div><div class="line"><span class="attr">highlight:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  line_number:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  auto_detect:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  tab_replace:</span></div><div class="line"></div><div class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></div><div class="line"><span class="attr">category_map:</span></div><div class="line"><span class="attr">tag_map:</span></div><div class="line"></div><div class="line"><span class="comment">#日期格式</span></div><div class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></div><div class="line"><span class="attr">time_format:</span> <span class="attr">HH:mm:ss</span></div><div class="line"></div><div class="line"><span class="comment">#分页，每页文章数量</span></div><div class="line"><span class="attr">per_page:</span> <span class="number">5</span></div><div class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></div><div class="line"></div><div class="line"><span class="comment">#博客主题</span></div><div class="line"><span class="attr">theme:</span> <span class="string">landscape</span></div><div class="line"></div><div class="line"><span class="comment">#发布设置</span></div><div class="line"><span class="attr">deploy:</span> </div><div class="line"><span class="attr">  type:</span> <span class="string">git</span></div><div class="line">  <span class="comment">#elfwalk改为你的github用户名（请修改）</span></div><div class="line"><span class="attr">  repository:</span> <span class="attr">https://github.com/elfwalk/elfwalk.github.io.git</span></div><div class="line"><span class="attr">  branch:</span> <span class="string">master</span></div></pre></td></tr></table></figure>
</li>
<li><p>在Git Shell中切换到hexo目录，输入以下命令即可创建一篇名为test的新文章，会有一个test.md出现在<code>hexo\source\_posts</code>这个目录中。</p>
<figure class="highlight haxe"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo <span class="keyword">new</span> <span class="type"></span>“test”</div></pre></td></tr></table></figure>
</li>
</ul>
<p>打开后看到默认会有title，date，tags等等信息，要写的文章内容可以在这个md中进行修改，可以先在后面随便打几个字作为正文。</p>
<p><img src="http://static.zybuluo.com/huji/m66fsq13ywwzj3xdrzzvwrg1/QQ%E6%88%AA%E5%9B%BE20160406160448.png" alt="test.md"></p>
<ul>
<li><p>接下来在Git Shell中输入以下命令，即可设置好身份信息</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user<span class="selector-class">.name</span> <span class="string">"你的用户名"</span></div><div class="line">git config --global user<span class="selector-class">.email</span> <span class="string">"你的邮箱"</span></div></pre></td></tr></table></figure>
</li>
<li><p>最终，使用以下命令即可将生成的网页部署到Github上。</p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">hexo deploy -g</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>访问<code>http://userName.github.io</code>就可以看到博客啦。</p>
<p>也可以使用下面的命令先在本地生成预览<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">hexo g</span></div><div class="line">hexo s</div></pre></td></tr></table></figure></p>
<p>在浏览器输入localhost:4000就可以看到本地生成的网页了，这样万一有问题可以改好了再提交到github上。</p>
<hr>
<h2 id="5-更换主题，使用第三方插件增加评论，阅读次数统计等功能。"><a href="#5-更换主题，使用第三方插件增加评论，阅读次数统计等功能。" class="headerlink" title="5. 更换主题，使用第三方插件增加评论，阅读次数统计等功能。"></a>5. 更换主题，使用第三方插件增加评论，阅读次数统计等功能。</h2><p>主题有很多好看的，这里选择了一个比较简单大方的Next主题。参考<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">教程</a>即可完成配置。</p>
<p> <strong>注意的地方</strong>：</p>
<ul>
<li><p>教程中的<code>站点配置文件</code>是指<code>hexo</code>目录下的<code>_config.yml</code>，<code>主题配置文件</code>是指<code>hexo\themes\next</code>目录下的<code>_config.yml</code>。</p>
</li>
<li><p>教程中设置头像时修改的应该是<code>主题配置文件</code>，设置本地头像图片可以放在<code>hexo\source\images\</code>目录下，也可以放在<code>\hexo\themes\next\source\uploads</code>，要注意放置的位置要和配置相对应。</p>
</li>
<li><p>教程中设置第三方服务的全都应该填在<code>主题配置文件</code>，这里面作者已经给写好了，只是都注释掉了，只要去掉注释，填写相应的内容即可。</p>
</li>
<li><p>阅读统计量功能里面，Next主题文件已经不需要修改，从<code>配置LeanCloud</code>开始看即可。</p>
</li>
<li><p>duoshuo评论功能打开之后，可以在<code>主题配置文件</code>中打开UA开关，这样会评论旁边会显示User使用的电脑环境等信息。usr_id可以在多说的网站，通过点击自己的用户名得到。</p>
</li>
</ul>
<p><img src="http://static.zybuluo.com/huji/91xx7uzlhaptef9tv1x66x65/UA.png" alt="UA.png-10.4kB"></p>
<ul>
<li>设置头像翻转啊等一些动态效果：登录多说后台-&gt;设置，可以在自定义文本里面修改一些词语，在基本设置-&gt;自定义CSS中可以添加如下CSS代码 <a href="http://wsgzao.github.io/post/duoshuo/" target="_blank" rel="external">^css</a>，实现后效果如图。</li>
</ul>
<p><img src="http://static.zybuluo.com/huji/dgjg98df8rcrj3vo58f7dr9x/comment.png" alt="comment.png-17.9kB"></p>
<figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*UA Start*/</span></div><div class="line"><span class="selector-tag">span</span><span class="selector-class">.this_ua</span> &#123;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#ccc</span><span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">5px</span><span class="meta">!important</span>;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">1px</span><span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#BBB</span><span class="meta">!important</span>;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line"></div><div class="line">    <span class="comment">/*text-transform: Capitalize!important;</span></div><div class="line">    float: right!important;</div><div class="line">    line-height: 18px!important;*/</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.this_ua</span><span class="selector-class">.platform</span><span class="selector-class">.Windows</span>&#123;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#39b3d7</span><span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border-color</span>: <span class="number">#46b8da</span><span class="meta">!important</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.this_ua</span><span class="selector-class">.platform</span><span class="selector-class">.Linux</span> &#123;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#3A3A3A</span><span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border-color</span>: <span class="number">#1F1F1F</span><span class="meta">!important</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.this_ua</span><span class="selector-class">.platform</span><span class="selector-class">.Ubuntu</span> &#123;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#DD4814</span><span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border-color</span>: <span class="number">#DD4814</span><span class="meta">!important</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.this_ua</span><span class="selector-class">.platform</span><span class="selector-class">.Mac</span> &#123;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#666666</span><span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border-color</span>: <span class="number">#666666</span><span class="meta">!important</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.this_ua</span><span class="selector-class">.platform</span><span class="selector-class">.Android</span> &#123;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#98C13D</span><span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border-color</span>: <span class="number">#98C13D</span><span class="meta">!important</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.this_ua</span><span class="selector-class">.platform</span><span class="selector-class">.iOS</span> &#123;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#666666</span><span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border-color</span>: <span class="number">#666666</span><span class="meta">!important</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.this_ua</span><span class="selector-class">.browser</span><span class="selector-class">.Chrome</span>&#123;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#EE6252</span><span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border-color</span>: <span class="number">#EE6252</span><span class="meta">!important</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.this_ua</span><span class="selector-class">.browser</span><span class="selector-class">.Chromium</span>&#123;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#EE6252</span><span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border-color</span>: <span class="number">#EE6252</span><span class="meta">!important</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.this_ua</span><span class="selector-class">.browser</span><span class="selector-class">.Firefox</span>&#123;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#f0ad4e</span><span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border-color</span>: <span class="number">#eea236</span><span class="meta">!important</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.this_ua</span><span class="selector-class">.browser</span><span class="selector-class">.IE</span>&#123;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#428bca</span><span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border-color</span>: <span class="number">#357ebd</span><span class="meta">!important</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.this_ua</span><span class="selector-class">.browser</span><span class="selector-class">.Edge</span>&#123;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#428bca</span><span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border-color</span>: <span class="number">#357ebd</span><span class="meta">!important</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.this_ua</span><span class="selector-class">.browser</span><span class="selector-class">.Opera</span>&#123;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#d9534f</span><span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border-color</span>: <span class="number">#d43f3a</span><span class="meta">!important</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.this_ua</span><span class="selector-class">.browser</span><span class="selector-class">.Maxthon</span>&#123;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#7373B9</span><span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border-color</span>: <span class="number">#7373B9</span><span class="meta">!important</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.this_ua</span><span class="selector-class">.browser</span><span class="selector-class">.Safari</span>&#123;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#666666</span><span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border-color</span>: <span class="number">#666666</span><span class="meta">!important</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.this_ua</span><span class="selector-class">.sskadmin</span> &#123;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#00a67c</span><span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border-color</span>: <span class="number">#00a67c</span><span class="meta">!important</span>;</div><div class="line">&#125;</div><div class="line"><span class="comment">/*UA End*/</span></div><div class="line"><span class="comment">/*Head Start*/</span></div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-tag">ul</span><span class="selector-class">.ds-comments-tabs</span> <span class="selector-tag">li</span><span class="selector-class">.ds-tab</span> <span class="selector-tag">a</span><span class="selector-class">.ds-current</span> &#123;</div><div class="line">    <span class="attribute">border</span>: <span class="number">0px</span>;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#6D6D6B</span>;</div><div class="line">    <span class="attribute">text-shadow</span>: none;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#F3F3F3</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-highlight</span> &#123;</div><div class="line">    <span class="attribute">font-family</span>: Microsoft YaHei, <span class="string">"Helvetica Neue"</span>, Helvetica, Arial, Sans-serif;</div><div class="line">    ;<span class="attribute">font-size</span>: <span class="number">100%</span>;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#6D6D6B</span> <span class="meta">!important</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-tag">ul</span><span class="selector-class">.ds-comments-tabs</span> <span class="selector-tag">li</span><span class="selector-class">.ds-tab</span> <span class="selector-tag">a</span><span class="selector-class">.ds-current</span>:hover &#123;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#696a52</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#F2F2F2</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-tag">a</span><span class="selector-class">.ds-highlight</span>:hover &#123;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#696a52</span> <span class="meta">!important</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-thread</span> &#123;</div><div class="line">    <span class="attribute">padding-left</span>: <span class="number">15px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-tag">li</span><span class="selector-class">.ds-post</span>,<span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-id">#ds-hot-posts</span> &#123;</div><div class="line">    <span class="attribute">overflow</span>: visible;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-post-self</span> &#123;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">10px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-tag">li</span><span class="selector-class">.ds-post</span>,<span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-post-self</span> &#123;</div><div class="line">    <span class="attribute">border</span>: <span class="number">0</span> <span class="meta">!important</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-avatar</span>, <span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-tag">ul</span><span class="selector-class">.ds-children</span> <span class="selector-class">.ds-avatar</span> &#123;</div><div class="line">    <span class="attribute">top</span>: <span class="number">15px</span>;</div><div class="line">    <span class="attribute">left</span>: -<span class="number">20px</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">36px</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">36px</span>;</div><div class="line">    <span class="attribute">box-shadow</span>: -<span class="number">1px</span> <span class="number">0</span> <span class="number">1px</span> rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">15</span>) inset;</div><div class="line">    <span class="attribute">border-radius</span>: <span class="number">46px</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#FAFAFA</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-class">.ds-avatar</span> <span class="selector-tag">a</span> &#123;</div><div class="line">    <span class="attribute">display</span>: inline-block;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">1px</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">32px</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">32px</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#b9baa6</span>;</div><div class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span> <span class="meta">!important</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-class">.ds-avatar</span> <span class="selector-tag">a</span>:hover &#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-class">.ds-avatar</span> &gt; <span class="selector-tag">img</span> &#123;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">2px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">2px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-replybox</span> &#123;</div><div class="line">    <span class="attribute">box-shadow</span>: none;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-tag">ul</span><span class="selector-class">.ds-children</span> <span class="selector-class">.ds-replybox</span><span class="selector-class">.ds-inline-replybox</span> <span class="selector-tag">a</span><span class="selector-class">.ds-avatar</span>,</div><div class="line"><span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-replybox</span><span class="selector-class">.ds-inline-replybox</span> <span class="selector-tag">a</span><span class="selector-class">.ds-avatar</span> &#123;</div><div class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">32px</span> <span class="meta">!important</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">32px</span> <span class="meta">!important</span>;</div><div class="line">    <span class="attribute">background</span>: none;</div><div class="line">    <span class="attribute">box-shadow</span>: none;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-replybox</span><span class="selector-class">.ds-inline-replybox</span> <span class="selector-tag">a</span><span class="selector-class">.ds-avatar</span> <span class="selector-tag">img</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">32px</span> <span class="meta">!important</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">32px</span> <span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-replybox</span> <span class="selector-tag">a</span><span class="selector-class">.ds-avatar</span>,</div><div class="line"><span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-replybox</span> <span class="selector-class">.ds-avatar</span> <span class="selector-tag">img</span> &#123;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">32px</span> <span class="meta">!important</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">32px</span> <span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-avatar</span> <span class="selector-tag">img</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">32px</span> <span class="meta">!important</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">32px</span> <span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border-radius</span>: <span class="number">32px</span>;</div><div class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span> rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.22</span>);</div><div class="line">    -webkit-<span class="attribute">transition</span>: .<span class="number">8s</span> all ease-in-out;</div><div class="line">    -moz-<span class="attribute">transition</span>: .<span class="number">4s</span> all ease-in-out;</div><div class="line">    -o-<span class="attribute">transition</span>: .<span class="number">4s</span> all ease-in-out;</div><div class="line">    -ms-<span class="attribute">transition</span>: .<span class="number">4s</span> all ease-in-out;</div><div class="line">    <span class="attribute">transition</span>: .<span class="number">4s</span> all ease-in-out;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.ds-post-self</span>:hover <span class="selector-class">.ds-avatar</span> <span class="selector-tag">img</span> &#123;</div><div class="line">    -webkit-<span class="attribute">transform</span>: rotateX(<span class="number">360deg</span>);</div><div class="line">    -moz-<span class="attribute">transform</span>: rotate(<span class="number">360deg</span>);</div><div class="line">    -o-<span class="attribute">transform</span>: rotate(<span class="number">360deg</span>);</div><div class="line">    -ms-<span class="attribute">transform</span>: rotate(<span class="number">360deg</span>);</div><div class="line">    <span class="attribute">transform</span>: rotate(<span class="number">360deg</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-comment-body</span> &#123;</div><div class="line">    -webkit-<span class="attribute">transition-delay</span>: initial;</div><div class="line">    -webkit-<span class="attribute">transition-duration</span>: <span class="number">0.4s</span>;</div><div class="line">    -webkit-<span class="attribute">transition-property</span>: all;</div><div class="line">    -webkit-<span class="attribute">transition-timing-function</span>: initial;</div><div class="line">    <span class="attribute">background</span>: <span class="number">#F7F7F7</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">15px</span> <span class="number">15px</span> <span class="number">15px</span> <span class="number">47px</span>;</div><div class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</div><div class="line">    <span class="attribute">box-shadow</span>: <span class="number">#B8B9B9</span> <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span>;</div><div class="line">    <span class="attribute">border</span>: white <span class="number">1px</span> solid;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-tag">ul</span><span class="selector-class">.ds-children</span> <span class="selector-class">.ds-comment-body</span> &#123;</div><div class="line">    <span class="attribute">padding-left</span>: <span class="number">15px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-comment-body</span> <span class="selector-tag">p</span> &#123;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#787968</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-comments</span> &#123;</div><div class="line">    <span class="attribute">border-bottom</span>: <span class="number">0px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-powered-by</span> &#123;</div><div class="line">    <span class="attribute">display</span>: none;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-comments</span> <span class="selector-tag">a</span><span class="selector-class">.ds-user-name</span> &#123;</div><div class="line">    <span class="attribute">font-weight</span>: normal;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#3D3D3D</span> <span class="meta">!important</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-comments</span> <span class="selector-tag">a</span><span class="selector-class">.ds-user-name</span>:hover &#123;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#D32</span> <span class="meta">!important</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-id">#ds-bubble</span> &#123;</div><div class="line">    <span class="attribute">display</span>: none <span class="meta">!important</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-id">#ds-hot-posts</span> &#123;</div><div class="line">    <span class="attribute">border</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-reset</span> <span class="selector-id">#ds-hot-posts</span> <span class="selector-class">.ds-gradient-bg</span> &#123;</div><div class="line">    <span class="attribute">background</span>: none;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#ds-thread</span> <span class="selector-id">#ds-reset</span> <span class="selector-class">.ds-comment-body</span>:hover &#123;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#F1F1F1</span>;</div><div class="line">    -webkit-<span class="attribute">transition-delay</span>: initial;</div><div class="line">    -webkit-<span class="attribute">transition-duration</span>: <span class="number">0.4s</span>;</div><div class="line">    -webkit-<span class="attribute">transition-property</span>: all;</div><div class="line">    -webkit-<span class="attribute">transition-timing-function</span>: initial;</div><div class="line">&#125;</div><div class="line"><span class="comment">/*Head End*/</span></div></pre></td></tr></table></figure>
<h2 id="6-新建about，categories页面以及插入外链图片或者视频"><a href="#6-新建about，categories页面以及插入外链图片或者视频" class="headerlink" title="6. 新建about，categories页面以及插入外链图片或者视频"></a>6. 新建about，categories页面以及插入外链图片或者视频</h2><ul>
<li><p>新建about, categories页面，在Git Shell中切换到hexo目录输入以下命令：</p>
<figure class="highlight haxe"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo <span class="keyword">new</span> <span class="type">page</span> <span class="string">"about"</span></div><div class="line">hexo <span class="keyword">new</span> <span class="type">page</span> <span class="string">"categories"</span></div></pre></td></tr></table></figure>
</li>
<li><p>命令输入完之后，会生成categories文件夹，里面会有index.md的文件，打开文件，修改为：</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">---</span></div><div class="line"><span class="attr">title:</span> <span class="string">categories</span></div><div class="line"><span class="attr">date:</span> <span class="number">2016</span><span class="bullet">-04</span><span class="bullet">-06</span> <span class="number">17</span><span class="string">:21:47</span></div><div class="line"><span class="attr">type:</span> <span class="string">"categories"</span></div><div class="line"><span class="meta">---</span></div></pre></td></tr></table></figure>
</li>
<li><p>在about页面可以插入图片，写文字等等，这里介绍下插入外链图片的方法。</p>
<ul>
<li>首先，<a href="https://portal.qiniu.com/signup?code=3lo4whaobe9g2" target="_blank" rel="external">注册七牛网</a>，注册好后要实名认证，然后就可以新建一个公开空间，点击内容管理，就可以上传文件并获得图片的外链了。</li>
<li>markdown中插入图片的方法这里顺便一提：</li>
</ul>
</li>
</ul>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![<span class="string">图片名称</span>](<span class="link">外链地址</span>)</div></pre></td></tr></table></figure>
<ul>
<li>插入视频通常是在视频网站选择嵌入，复制其提供的html代码，直接粘贴进博客的md文件中即可，因为markdown是支持html语法的~</li>
</ul>
<p><img src="http://7xsoqo.com1.z0.glb.clouddn.com/hexo%2Finsert_vedio.png" alt="insert_vedio"></p>
<h2 id="7-更新的相关操作"><a href="#7-更新的相关操作" class="headerlink" title="7. 更新的相关操作"></a>7. 更新的相关操作</h2><ul>
<li><p>更新hexo：</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">npm</span> update -g hexo</div></pre></td></tr></table></figure>
</li>
<li><p>更新主题：<br>cd 到主题文件夹，执行命令：</p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">git pull</span></div></pre></td></tr></table></figure>
</li>
<li><p>更新插件：</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">npm</span> update</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="8-增加脚注功能footnotes"><a href="#8-增加脚注功能footnotes" class="headerlink" title="8. 增加脚注功能footnotes"></a>8. 增加脚注功能footnotes</h2><p>在Cmd Markdown里面写东西的时候是支持脚注的，但是Hexo默认的markdown渲染插件好像不支持，所以只好换了一个，步骤如下：</p>
<ul>
<li><p>在hexo目录下输入</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm un hexo-renderer-marked <span class="comment">--save</span></div><div class="line">npm i hexo-renderer-markdown-<span class="keyword">it</span> <span class="comment">--save</span></div></pre></td></tr></table></figure>
</li>
<li><p>不过此时的hexo-renderer-markdown-it还是用不了脚注，我们需要加上plugin，这里写了一句footnote的安装，其他的也可以干脆一起装了，还可以支持emoji表情哦~~ :smile:</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd node_modules/hexo-renderer-markdown-<span class="keyword">it</span>/</div><div class="line">npm install markdown-<span class="keyword">it</span>-footnote <span class="comment">--save</span></div></pre></td></tr></table></figure>
</li>
<li><p>装好之后编辑Hexo的配置文件<code>_config.yml</code>，插入以下句子即可。</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="attr">markdown:</span></div><div class="line"><span class="attr">  render:</span></div><div class="line"><span class="attr">    html:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    xhtmlOut:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    breaks:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    linkify:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    typographer:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    quotes:</span> <span class="string">'“”‘’'</span></div><div class="line"><span class="attr">  plugins:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">markdown-it-footnote</span></div><div class="line"><span class="bullet">    -</span> <span class="string">markdown-it-sup</span></div><div class="line"><span class="bullet">    -</span> <span class="string">markdown-it-sub</span></div><div class="line"><span class="bullet">    -</span> <span class="string">markdown-it-abbr</span></div><div class="line"><span class="bullet">    -</span> <span class="string">markdown-it-emoji</span></div><div class="line"><span class="attr">  anchors:</span></div><div class="line"><span class="attr">    level:</span> <span class="number">2</span></div><div class="line"><span class="attr">    collisionSuffix:</span> <span class="string">'v'</span></div><div class="line"><span class="attr">    permalink:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    permalinkClass:</span> <span class="string">header-anchor</span></div><div class="line"><span class="attr">    permalinkSymbol:</span> <span class="string">¶</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="9-数学公式后面有竖线的问题解决"><a href="#9-数学公式后面有竖线的问题解决" class="headerlink" title="9. 数学公式后面有竖线的问题解决"></a>9. 数学公式后面有竖线的问题解决</h2><p>这个问题在<a href="https://github.com/iissnan/hexo-theme-next/issues/752" target="_blank" rel="external">Issues</a>里已经有人提出来，作者给出了解决方案，为了方便也在这里记录下：</p>
<ul>
<li><p>首先，编辑next的主题配置文件<code>_config.yml</code>，在里面找到mathjax的部分，替换为以下内容：</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># MathJax Support</span></div><div class="line"><span class="attr">mathjax:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  cdn:</span> <span class="string">//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML</span></div></pre></td></tr></table></figure>
</li>
<li><p>打开<code>\hexo\themes\next\layout\_scripts\third-party\mathjax.swig</code>，将其内容替换为：</p>
<figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> theme.mathjax.enable %&#125;</span><span class="xml"></span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/x-mathjax-config"</span>&gt;</span><span class="actionscript"></span></div><div class="line">    MathJax.Hub.Config(&#123;</div><div class="line">      tex2jax: &#123;</div><div class="line">        inlineMath: [ [<span class="string">'$'</span>,<span class="string">'$'</span>], [<span class="string">"\\("</span>,<span class="string">"\\)"</span>]  ],</div><div class="line">        processEscapes: <span class="literal">true</span>,</div><div class="line">        skipTags: [<span class="string">'script'</span>, <span class="string">'noscript'</span>, <span class="string">'style'</span>, <span class="string">'textarea'</span>, <span class="string">'pre'</span>, <span class="string">'code'</span>]</div><div class="line">      &#125;</div><div class="line">    &#125;);</div><div class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/x-mathjax-config"</span>&gt;</span><span class="actionscript"></span></div><div class="line">    MathJax.Hub.Queue(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">      <span class="keyword">var</span> all = MathJax.Hub.getAllJax(), i;</div><div class="line">      <span class="keyword">for</span> (i=<span class="number">0</span>; i &lt; all.length; i += <span class="number">1</span>) &#123;</div><div class="line">        all[i].SourceElement().parentNode.className += <span class="string">' has-jax'</span>;</div><div class="line">      &#125;</div><div class="line">    &#125;);</div><div class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"</span></span><span class="template-variable">&#123;&#123; theme.mathjax.cdn &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>测试一下，应该可以啦~<br>$$\sum_{i=1}^n a_i=0$$</p>
<h3 id="10-迁移博客"><a href="#10-迁移博客" class="headerlink" title="10. 迁移博客"></a>10. 迁移博客</h3><p>最近换了电脑，需要迁移博客，把流程记录一下<br>我把源文件存在了github.xxx.io.git的hexo分支上，所以要先从这里clone 源文件<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="keyword">clone</span> <span class="title">-b</span> hexo https://github.com/xxx/xxx.github.io.git</div></pre></td></tr></table></figure></p>
<p>在本地新拷贝xxx.github.io文件夹下通过Git bash依次执行下列指令：npm install hexo、npm install、npm install hexo-deployer-git</p>
<p>在本地对博客进行修改（添加新博文、修改样式等等）后，通过下面的流程进行管理。</p>
<ol>
<li>依次执行git add .、git commit -m “…”、git push origin hexo指令将改动推送到GitHub（此时当前分支应为hexo）；</li>
<li>然后才执行hexo g -d发布网站到master分支上。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这几天心血来潮在Github上建了个博客，纠结了半天才倒腾好，希望以后自己能多总结下学的知识，先从建立博客开始咯~&lt;/p&gt;
    
    </summary>
    
      <category term="other" scheme="http://hujichn.github.io/categories/other/"/>
    
    
      <category term="Blog" scheme="http://hujichn.github.io/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>第一章 Spark简介</title>
    <link href="http://hujichn.github.io/2016/03/10/%E7%AC%AC%E4%B8%80%E7%AB%A0-Spark%E7%AE%80%E4%BB%8B/"/>
    <id>http://hujichn.github.io/2016/03/10/第一章-Spark简介/</id>
    <published>2016-03-10T03:07:41.000Z</published>
    <updated>2017-03-14T07:13:35.058Z</updated>
    
    <content type="html"><![CDATA[<p>author: <a href="https://hujichn.github.io/">@Huji</a></p>
<h2 id="1-1-Spark的技术背景"><a href="#1-1-Spark的技术背景" class="headerlink" title="1.1 Spark的技术背景"></a>1.1 Spark的技术背景</h2><p>大多数现有的集群计算系统都是基于非循环的数据流模型。</p>
<ul>
<li><p>非循环的数据流模型: 从稳定的物理存储（分布式文件系统）中加载记录，记录被传入由一组确定性操作构成的DAG（Directed Acyclic Graph，有向无环图），然后写回稳定存储。</p>
</li>
<li><p>数据流模型的<strong>特点</strong>: 自动容错、位置感知性调度和可伸缩性</p>
</li>
<li><p>数据流模型<strong>不适合的场景</strong>：</p>
<ul>
<li>迭代算法</li>
<li>交互式数据挖掘工具</li>
</ul>
</li>
</ul>
<p>Spark实现了一种分布式的内存抽象，称为<strong>弹性分布式数据集</strong>（Resilient Distributed Dataset，RDD）。RDD允许用户在执行多个查询时显示地将工作缓存在内在中，后续的查询能够重用工作集。</p>
<h2 id="1-2-Spark的优点"><a href="#1-2-Spark的优点" class="headerlink" title="1.2 Spark的优点"></a>1.2 Spark的优点</h2><ul>
<li>速度：和MapReduce相比，基于内存的运算快100倍以上，基于硬盘的运算快10倍以上。</li>
<li>易用：支持Java，Python和Scala的API，用户可以快速构建不同应用</li>
<li>通用性：可以用于批处理、交互式查询、实时流处理、机器学习和图计算<br><img src="http://static.zybuluo.com/huji/ap7dsrlwipub9co1iclun9w0/20140612205604453.png" alt="20140612205604453.png-18.9kB"></li>
<li>可融合性：可以和其他开源产品进行融合，可以使用Hadoop的YARN和Apache Mesos作为资源管理和调度器，并且可以支持所有Hadoop支持的数据，包括HDFS、HBase和Cassandra等，不需要做数据迁移。</li>
</ul>
<h2 id="1-3-Spark架构综述"><a href="#1-3-Spark架构综述" class="headerlink" title="1.3 Spark架构综述"></a>1.3 Spark架构综述</h2><p><img src="http://static.zybuluo.com/huji/p4ug5nlo0r7a651u84imfsry/QQ%E6%88%AA%E5%9B%BE20160310114355.png" alt="QQ截图20160310114355.png-87.8kB"><br>用户程序提交到最终计算执行的步骤：</p>
<ul>
<li>用户创建的SparkContext实例会连接到Cluster Manager，根据用户设置的CPU和内存信息来分配计算资源，启动Executor</li>
<li>Driver将程序划分为不同执行阶段，创建Task，向Executor发送Task</li>
<li>Executor接收到Task后，准备好运行环境，执行Task，并且向Driver汇报Task的运行状态</li>
<li>Driver根据收到的信息处理不同的状态更新。Task又分为Shuffle Map Task和Result Task</li>
<li>Driver不断调用Task直到所有Task都正确执行或超过执行次数限制时停止</li>
</ul>
<h2 id="1-4-核心组件介绍"><a href="#1-4-核心组件介绍" class="headerlink" title="1.4 核心组件介绍"></a>1.4 核心组件介绍</h2><ul>
<li>Spark Streaming: 将流式计算分解成一系列短小的批处理作业</li>
<li>MLlib：可以做一些分类，回归，聚类，协同过滤，降维等</li>
<li>Spark SQL：不管数据源的来源如何，用户都能够通过Spark支持的所有语言来操作这些数据。</li>
<li>GraphX：关于图和图并行计算的API</li>
</ul>
<h2 id="1-5-Spark的整体代码结构规模"><a href="#1-5-Spark的整体代码结构规模" class="headerlink" title="1.5 Spark的整体代码结构规模"></a>1.5 Spark的整体代码结构规模</h2><p>Spark Core是Spark的核心，上面提到的核心组件都是基于Spark Core的实现和衍生。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;author: &lt;a href=&quot;https://hujichn.github.io/&quot;&gt;@Huji&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-1-Spark的技术背景&quot;&gt;&lt;a href=&quot;#1-1-Spark的技术背景&quot; class=&quot;headerlink&quot; title=&quot;1.
    
    </summary>
    
      <category term="coding" scheme="http://hujichn.github.io/categories/coding/"/>
    
    
      <category term="Spark" scheme="http://hujichn.github.io/tags/Spark/"/>
    
  </entry>
  
  <entry>
    <title>Tips on data analysis by python</title>
    <link href="http://hujichn.github.io/2016/03/02/Tips%20on%20data%20analysis%20by%20python/"/>
    <id>http://hujichn.github.io/2016/03/02/Tips on data analysis by python/</id>
    <published>2016-03-02T14:42:00.000Z</published>
    <updated>2017-03-14T07:13:35.014Z</updated>
    
    <content type="html"><![CDATA[<p>利用python进行数据分析时的一些小tips，有的是python自带的数据结构，还有很多是针对pandas当中的dataframe和series，因为是零零碎碎整理的 ，比较发散，平时想到了就加进来，所以没太多逻辑哈。</p>
<a id="more"></a>
<p>author: <a href="https://hujichn.github.io">@Huji</a></p>
<p>[toc]</p>
<h3 id="1-建立一个元素全部为0的长度为10的list"><a href="#1-建立一个元素全部为0的长度为10的list" class="headerlink" title="1. 建立一个元素全部为0的长度为10的list"></a>1. 建立一个元素全部为0的长度为10的list</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">mylist</span> = [<span class="number">0</span>] * <span class="number">10</span></div></pre></td></tr></table></figure>
<p>类似地还有输出一条分割线<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"-"</span> * <span class="number">40</span>)</span></span></div></pre></td></tr></table></figure></p>
<h3 id="2-判断list当中不为nan的元素，统计其数值"><a href="#2-判断list当中不为nan的元素，统计其数值" class="headerlink" title="2. 判断list当中不为nan的元素，统计其数值"></a>2. 判断list当中不为nan的元素，统计其数值</h3><figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">count</span> = <span class="keyword">sum</span>([<span class="keyword">str</span>(x) != <span class="string">'nan'</span> <span class="keyword">for</span> x in mylist])</div></pre></td></tr></table></figure>
<h3 id="3-快速得到DataFrame的长度"><a href="#3-快速得到DataFrame的长度" class="headerlink" title="3. 快速得到DataFrame的长度"></a>3. 快速得到DataFrame的长度</h3><figure class="highlight glsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">length</span> = len(df.<span class="keyword">index</span>)</div></pre></td></tr></table></figure>
<h3 id="4-把Datetime格式的日期转化成字符串"><a href="#4-把Datetime格式的日期转化成字符串" class="headerlink" title="4. 把Datetime格式的日期转化成字符串"></a>4. 把Datetime格式的日期转化成字符串</h3><figure class="highlight cos"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dt.strftime('<span class="built_in">%Y</span><span class="built_in">%m</span><span class="built_in">%d</span>')</div></pre></td></tr></table></figure>
<h3 id="5-把DataFrame的某一列转化为datetime格式"><a href="#5-把DataFrame的某一列转化为datetime格式" class="headerlink" title="5. 把DataFrame的某一列转化为datetime格式"></a>5. 把DataFrame的某一列转化为datetime格式</h3><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df[<span class="string">'datetime'</span>] = pd.to_datetime(df[<span class="string">'datetime'</span>])</div></pre></td></tr></table></figure>
<h3 id="6-把DataFrame中某一列str数据转换为int"><a href="#6-把DataFrame中某一列str数据转换为int" class="headerlink" title="6. 把DataFrame中某一列str数据转换为int"></a>6. 把DataFrame中某一列str数据转换为int</h3><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df[<span class="string">'column_name'</span>] = df[<span class="string">'column_name'</span>].astype(<span class="string">'int'</span>)</div></pre></td></tr></table></figure>
<h3 id="7-把DataFrame中混合了nan和str的数据转换为整数（int）"><a href="#7-把DataFrame中混合了nan和str的数据转换为整数（int）" class="headerlink" title="7. 把DataFrame中混合了nan和str的数据转换为整数（int）"></a>7. 把DataFrame中混合了nan和str的数据转换为整数（int）</h3><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df[<span class="string">'column_name'</span>] = pd.to_numeric(df[<span class="string">'column_name'</span>])</div></pre></td></tr></table></figure>
<h3 id="8-读取csv的时候指定index，列名，以及某一列的数据类型"><a href="#8-读取csv的时候指定index，列名，以及某一列的数据类型" class="headerlink" title="8. 读取csv的时候指定index，列名，以及某一列的数据类型"></a>8. 读取csv的时候指定index，列名，以及某一列的数据类型</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">df</span> = pd.read_csv(<span class="string">'df.csv'</span>, index_col = <span class="string">'a'</span>, header=<span class="number">0</span>, usecols=[<span class="number">0</span>,<span class="number">1</span>], names = &#123;<span class="string">'a'</span>,<span class="string">'b'</span>&#125;，dtype=&#123;<span class="string">'NET_ID'</span>:int&#125;)</div></pre></td></tr></table></figure>
<h3 id="9-找出某一列中出现次数最多的数值"><a href="#9-找出某一列中出现次数最多的数值" class="headerlink" title="9. 找出某一列中出现次数最多的数值"></a>9. 找出某一列中出现次数最多的数值</h3><p>（mode()函数的说明：Empty if nothing occurs at least 2 times. Always returns Series even if only one value.）<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">value</span> = mSeries.mode().loc[<span class="number">0</span>]</div></pre></td></tr></table></figure></p>
<h3 id="10-判断loc后的结果是Series还是DataFrame"><a href="#10-判断loc后的结果是Series还是DataFrame" class="headerlink" title="10. 判断loc后的结果是Series还是DataFrame"></a>10. 判断loc后的结果是Series还是DataFrame</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">isinstance</span><span class="params">(mReturnValue, pd.Series)</span></span></div><div class="line"><span class="function"><span class="title">isinstance</span><span class="params">(mReturnValue, pd.DataFrame)</span></span></div></pre></td></tr></table></figure>
<h3 id="11-从Series建立只有一行的DataFrame"><a href="#11-从Series建立只有一行的DataFrame" class="headerlink" title="11. 从Series建立只有一行的DataFrame"></a>11. 从Series建立只有一行的DataFrame</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">df</span> = pd.DataFrame([mSeries])</div></pre></td></tr></table></figure>
<h3 id="12-得到df当中a列值小于5的部分"><a href="#12-得到df当中a列值小于5的部分" class="headerlink" title="12. 得到df当中a列值小于5的部分"></a>12. 得到df当中a列值小于5的部分</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">result</span> = df[df.a &lt; <span class="number">5</span>]</div></pre></td></tr></table></figure>
<h3 id="13-写入csv文件，不覆盖之前的内容"><a href="#13-写入csv文件，不覆盖之前的内容" class="headerlink" title="13. 写入csv文件，不覆盖之前的内容"></a>13. 写入csv文件，不覆盖之前的内容</h3><figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df.to_csv(<span class="string">'a.csv'</span>, mode = <span class="string">'a'</span>, <span class="keyword">header</span> = <span class="literal">False</span>)</div></pre></td></tr></table></figure>
<h3 id="14-写入sql的参数设置"><a href="#14-写入sql的参数设置" class="headerlink" title="14. 写入sql的参数设置"></a>14. 写入sql的参数设置</h3><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df.to<span class="number">_</span>sql(<span class="string">'tableName'</span>, engine, <span class="keyword">if</span><span class="number">_</span><span class="keyword">exists</span> = <span class="string">'append'</span>, index = True, index<span class="number">_</span>label = <span class="string">'indexName'</span>)</div></pre></td></tr></table></figure>
<p>if_exists也可以设置为<code>replace</code></p>
<h3 id="15-找出符合某些条件的区域，赋给一定的数值"><a href="#15-找出符合某些条件的区域，赋给一定的数值" class="headerlink" title="15. 找出符合某些条件的区域，赋给一定的数值"></a>15. 找出符合某些条件的区域，赋给一定的数值</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df<span class="selector-class">.ix</span>[df<span class="selector-class">.stock</span> &lt; <span class="number">0</span>, <span class="string">'stock'</span>] = <span class="number">0</span></div></pre></td></tr></table></figure>
<h3 id="16-重采样"><a href="#16-重采样" class="headerlink" title="16. 重采样"></a>16. 重采样</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df = df.resample(<span class="string">"30min"</span>, closed = <span class="string">'right'</span>, <span class="keyword">label</span><span class="bash">=<span class="string">'right'</span>, how=<span class="string">'last'</span>, fill_method = <span class="string">'ffill'</span>)</span></div></pre></td></tr></table></figure>
<h3 id="17-apply某一函数"><a href="#17-apply某一函数" class="headerlink" title="17. apply某一函数"></a>17. apply某一函数</h3><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df[<span class="string">"column_name"</span>] = df[<span class="string">'column_name'</span>].apply(lambda x: 2*<span class="keyword">int</span>(x)-3)</div></pre></td></tr></table></figure>
<h3 id="18-append和concat"><a href="#18-append和concat" class="headerlink" title="18. append和concat"></a>18. append和concat</h3><p>功能类似，好像concat在连接空DataFrame的时候效率会很低</p>
<h3 id="19-浮点数取整"><a href="#19-浮点数取整" class="headerlink" title="19. 浮点数取整"></a>19. 浮点数取整</h3><ul>
<li>类型工厂函数,int()，效果：浮点数取整，如int(3.5)就返回3；数字的字符形式转换成数字，如int(“35”)就返回35</li>
<li>内置函数的round(),四舍五入，第二个参数是保留小数点后多少位，默认是0，如round(3.5)返回4.0，round(3.5,1)就返回3.5，不能取整</li>
<li>math模块的floor(),取小于等于的整数,如floor(3.5)返回3.0,floor(-1.5)返回-2.0，也不能取整</li>
</ul>
<h3 id="20-提取出DataFrame当中等于某些数值的行"><a href="#20-提取出DataFrame当中等于某些数值的行" class="headerlink" title="20. 提取出DataFrame当中等于某些数值的行"></a>20. 提取出DataFrame当中等于某些数值的行</h3><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">df = pd.<span class="symbol">DataFrame</span>(&#123;<span class="string">'vals'</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], <span class="string">'ids'</span>: [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'f'</span>, <span class="string">'n'</span>], <span class="string">'ids2'</span>: [<span class="string">'a'</span>, <span class="string">'n'</span>, <span class="string">'c'</span>, <span class="string">'n'</span>]&#125;)</div><div class="line">                  </div><div class="line"># 对于，dataframe，这里的values还可以写成字典，values = &#123;<span class="string">"ids"</span>:[<span class="string">'a'</span>, <span class="string">'b'</span>], <span class="string">"vals"</span>: [<span class="number">1</span>, <span class="number">2</span>]&#125;，对于series，list就够了</div><div class="line"></div><div class="line">values = [<span class="string">'a'</span>, <span class="string">'b'</span>]</div><div class="line"></div><div class="line"># 对于字典的话，找出同时满足条件的行，则要在后面加个.all(<span class="number">1</span>)</div><div class="line">row_mask = df[<span class="string">'ids'</span>].isin(values)</div><div class="line">df[row_mask]</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;利用python进行数据分析时的一些小tips，有的是python自带的数据结构，还有很多是针对pandas当中的dataframe和series，因为是零零碎碎整理的 ，比较发散，平时想到了就加进来，所以没太多逻辑哈。&lt;/p&gt;
    
    </summary>
    
      <category term="coding" scheme="http://hujichn.github.io/categories/coding/"/>
    
    
      <category term="Python" scheme="http://hujichn.github.io/tags/Python/"/>
    
  </entry>
  
</feed>
